{"version":3,"file":"spatialknowledge.js","sources":["../../src/helpers.js","../../src/grouping/Item.js","../../src/grouping/Individual.js","../../src/navigation/tree/DrawLink.js","../../src/navigation/tree/TreeBundle.js","../../src/navigation/tree/TreeLevel.js","../../src/navigation/tree/dimensioning.js","../../src/navigation/tree/TreeNode.js","../../src/navigation/tree/hierarchy.js","../../src/navigation/tree/TreeHierarchy.js","../../src/navigation/tree/TreeKnowledge.js","../../src/navigation/minimap/MiniMapIcon.js","../../src/navigation/minimap/MiniMapViewRect.js","../../src/navigation/minimap/MiniMap.js","../../src/navigation/lasso/Lasso.js","../../src/grouping/Group.js","../../src/navigation/NavigationManager.js","../../src/knowledge/KnowledgeManager.js","../../src/main.js"],"sourcesContent":["export function html2element(html){\r\n  let template = document.createElement('template'); \r\n  template.innerHTML = html.trim(); // Never return a text node of whitespace as the result\r\n  return template.content.firstChild;\r\n} // html2element\r\n\r\nexport function svg2element(svg){\r\n  let g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\r\n  g.innerHTML = svg.trim();\r\n  return g.firstChild;\r\n} // svg2element\r\n\r\n\r\n\r\n\r\n// How to make the addition of dragging more general?? There are some things that have to happen. Pass them in as additional functions?\r\nexport function addDraggingToItem(item, onstart, ondrag, onend){\r\n\t// Add an object to facilitate the dragging.\r\n\t\r\n\tlet active = false;\r\n\tlet itemRelativePosition = [0, 0];\r\n\t\r\n\titem.node.onmouseenter = function(){\r\n\t\tactive = false;\r\n\t} // onmouseenter\r\n\titem.node.onmouseleave = function(){\r\n\t\tactive = false;\r\n\t} // onmouseleave\r\n\titem.node.onmousedown = function(e){\r\n\t\tif(e.target == item.node || e.target == item.wrappednode){\r\n\t\t\tlet rect = item.node.getBoundingClientRect();\r\n\t\t\t\r\n\t\t\tactive = true;\r\n\t\t\titemRelativePosition = [\r\n\t\t\t\te.clientX - rect.x,\r\n\t\t\t\te.clientY - rect.y\r\n\t\t\t];\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// Also move the viewFrame div up so that dragging over otehr higher divs is uninterrupted.\r\n\t\t\titem.node.parentNode.insertBefore(item.node, null);\r\n\t\t\t\r\n\t\t\tif(onstart){onstart()} // if\r\n\t\t} // if\r\n\t} // onmousedown\r\n\titem.node.onmousemove = function(e){\r\n\t\tif(active){\r\n\t\t\tlet x = e.pageX - itemRelativePosition[0];\r\n\t\t\tlet y = e.pageY - itemRelativePosition[1];\r\n\t\t\t\r\n\t\t\titem.node.style.left = x + \"px\"\r\n\t\t\titem.node.style.top  = y + \"px\"\r\n\t\t\t\r\n\t\t\tif(ondrag){ondrag()};\r\n\t\t} // if\r\n\t} // mousemove\r\n\titem.node.onmouseup   = function(){\r\n\t\tactive = false;\r\n\t\tif(onend){onend()};\r\n\t} // onmouseup\r\n} // addDraggingToItem\r\n\r\n\r\n\r\n\r\n// Will I need this dragging elsewhere??\r\nexport function addDraggingToSvgItem(svg, item){\r\n\t// SVG movement should be done in SVG coordinates. As the SVG is small, and never moves off screen, the relative position can be calculated on hte go.\r\n\t// The item can never move off the svg, as when it's dragged to the border and the mouse moves over the edge it stops being dragged. The rectangle is well behaved when the mouse re-enters the svg, and only skips when the rectangle is re-entered. Still, it may be good to stop the dragging if th emouse leaves the svg.\r\n\t\r\n\tlet active = false;\r\n\tlet clickedItemOffset = [0,0];\r\n\t\r\n\t\r\n\titem.onmousedown = function(e){\r\n\t\tactive = true;\r\n\t\t\r\n\t\t// Correcting for clicked position within item.\r\n\t\tlet itemClientRect = item.getBoundingClientRect();\r\n\t\tclickedItemOffset = {\r\n\t\t\tx: itemClientRect.x - e.clientX,\r\n\t\t\ty: itemClientRect.y - e.clientY\r\n\t\t} // clickedItemOffset\r\n\t} // onmousedown\r\n\titem.onmousemove = function(e){\r\n\t\tif(active){\r\n\t\t\t// Convert the mouse position into the position within the parent SVG:\r\n\t\t\tlet svgClientRect = svg.getBoundingClientRect();\r\n\t\t\t\r\n\t\t\t// Check if the mouse left the svg.\r\n\t\t\tif(isEventWithinRectangle(e, svgClientRect)){\r\n\t\t\t\tlet x = e.clientX - svgClientRect.x + clickedItemOffset.x;\r\n\t\t\t\tlet y = e.clientY - svgClientRect.y + clickedItemOffset.y;\r\n\t\t\t\t\r\n\t\t\t\titem.setAttribute(\"x\", x)\r\n\t\t\t\titem.setAttribute(\"y\", y)\r\n\t\t\t} else {\r\n\t\t\t\tactive = false;\r\n\t\t\t} // if\r\n\t\t\t\r\n\t\t} // if\r\n\t} // mousemove\r\n\titem.onmouseup   = function(){\r\n\t\tactive = false;\r\n\t} // onmouseup\r\n} // addDraggingToItem\r\n\r\n\r\n\r\n\r\nexport function isWithinBoundingClientRect(A, B){\r\n\t// A and B are expected to be the results of \"getBoundingClientRect\"\r\n\treturn ( A.x > B.x && A.x < B.x + B.width ) &&\r\n\t       ( A.y > B.y && A.y < B.y + B.height );\r\n} // isEventWithinRectangle\r\n\r\n\r\n\r\nexport class scaleCategorical {\r\n  domain = []\r\n  range = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf']\r\n\r\n  // Opposite function is not defined - two domain values can map to the same range value.\r\n  dom2range(v){\r\n\tlet obj = this;\r\n\tif(v){\r\n\t\tlet i = (obj.domain.indexOf(v)+1) % obj.range.length - 1;\r\n\t\tif(i<0){\r\n\t\t\tobj.domain.push(v);\r\n\t\t\treturn obj.range[obj.domain.length-1];\r\n\t\t} else {\r\n\t\t\treturn obj.range[i];\r\n\t\t} // if\r\n\t} else {\r\n\t\t// If v isn't a truthy just return black.\r\n\t\treturn '#000000';\r\n\t} // if\r\n  } // dom2range\r\n  \r\n} // scaleCategorical\r\n\r\n\r\n\r\nexport class scaleLinear {\r\n  \r\n  _domain = [0, 1]\r\n  _range = [0, 1]\r\n\r\n  set domain(d){ this._domain = d } // domain\r\n  get domain(){ return this._domain } // domain\r\n\r\n  set range(r){ this._range = r } // range\r\n  get range(){ return this._range } // range\r\n\r\n  dom2range(v){\r\n\treturn mapSpaceAValueToSpaceB(v, this.domain, this.range)\r\n  } // dom2range\r\n  \r\n  range2dom(v){\r\n\treturn mapSpaceAValueToSpaceB(v, this.range, this.domain)  \r\n  } // range2dom\r\n} // scaleLinear\r\n\r\nfunction mapSpaceAValueToSpaceB(v, A, B){\r\n\treturn (v-A[0])/(A[1]-A[0]) * (B[1]-B[0]) + B[0]\r\n} // mapSpaceAValueToSpaceB\r\n\r\n\r\n\r\n// From regular helpers.\r\nexport function arrayEqual(A, B){\r\n\t\r\n\treturn arrayIncludesAll(A, B)\r\n\t\t&& arrayIncludesAll(B, A)\r\n\t\r\n} // arrayEqual\r\n\r\nexport function arrayIncludesAll(A,B){\r\n\t// 'arrayIncludesAll' checks if array A includes all elements of array B. The elements of the arrays are expected to be strings.\r\n\t\r\n\t// Return element of B if it is not contained in A. If the response array has length 0 then A includes all elements of B, and 'true' is returned.\r\n\tvar f = B.filter(function(b){\r\n\t\treturn !A.includes(b)\r\n\t})\r\n\t\r\n\treturn f.length == 0? true : false\r\n} // arrayIncludesAll","import { html2element } from \"../helpers.js\";\r\n\r\nlet template = `\r\n<div class=\"item\">\r\n  <div class=\"head unselectable\">\r\n    <span class=\"label\"></span>\r\n\t<span class=\"button dissolve\" style=\"display: none;\">✖</span>\r\n\t<span class=\"button enter\" style=\"display: none;\">⮊</span>\r\n  </div>\r\n  <div class=\"view\"></div>\r\n  <div class=\"preview\"></div>\r\n  <div class=\"controls\"></div>\r\n  <div class=\"commenting\"></div>\r\n</div>\r\n`;\r\n\r\n/*\r\n`Item' is a basis for individual small multiples as well as groups. It implements the node creation and appends dragging.\r\n\r\nScaling: the container is transformed to include zooming/panning. When the zoom happens the items are prompted to check whether they are still large enough to draw the data.\r\n*/\r\nexport default class Item{\r\n\t\r\n  // Main viewport dimensions;\r\n  width = 300;\r\n  height = 200;\r\n\t\r\n  constructor(){\r\n\tlet obj = this;\r\n\t  \r\n\t\r\n\tobj.node = html2element(template);\r\n\tobj.node.style.position = \"absolute\";\r\n\t  \r\n\tobj.viewnode = obj.node.querySelector(\"div.view\");\r\n\tobj.viewnode.style.height = obj.height + \"px\";\r\n\tobj.viewnode.style.width = obj.width + \"px\";\r\n\t  \r\n\tobj.previewnode = obj.node.querySelector(\"div.preview\");\r\n\tobj.previewnode.style.maxWidth = obj.width + \"px\";\r\n\t\r\n\t// Add the dragging in here. The dragging is supposed to be in a scaled, and potentially tranlated div, so the offset to the div needs to be removed.\r\n\tlet active = false;\r\n\tlet itemStartPosition = [0,0];\r\n\tlet itemRelativePosition = [0, 0];\r\n\t\t\r\n\t\t\r\n\t// The `e.target == obj.node' prevents any events on the children elements to bubble up. This require the title width to be 0, and it prevented from a button being positioned to the right. \r\n\t// `obj.node.contains(e.target)' allows any children to launch the dragging, but this will interfere with the panning and zooming in the viewport div.\r\n\t// Maybe any child that is contained by obj.node. but not the viewport node?\r\n\tobj.node.onmousedown = function(e){\r\n\t  if(obj.node.contains(e.target) && e.target != obj.viewnode && obj.node.isConnected){\r\n\t\te.preventDefault();\r\n\t\tlet rect = obj.node.getBoundingClientRect();\r\n\t\t\r\n\t\tactive = true;\r\n\t\titemStartPosition = obj.position;\r\n\t\titemRelativePosition = [\r\n\t\t  e.clientX - rect.x,\r\n\t\t  e.clientY - rect.y\r\n\t\t];\r\n\t\t\r\n\t\t// Also move the viewFrame div up so that dragging over otehr higher divs is uninterrupted.\r\n\t\tobj.node.parentNode.insertBefore(obj.node, null);\r\n\t  } // if\r\n\t} // onmousedown\r\n\tobj.node.onmousemove = function(e){\r\n\t  if(active){\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\t// The parent may be rescaled, retrieve and collect the k from it.\r\n\t\tlet p = obj.node.parentElement;\r\n\t\tlet k = Number( p.style.transform.split(\" \")[0].replace(/^\\D+|\\D+$/g, \"\") );\r\n\t\tlet parentRect = p.getBoundingClientRect();\r\n\t\t\r\n\t\tlet x = e.pageX - parentRect.x - itemRelativePosition[0];\r\n\t\tlet y = e.pageY - parentRect.y - itemRelativePosition[1];\r\n\t\t\r\n\t\tobj.position = [x/k, y/k];\r\n\t\t\r\n\t\tobj.onmove();\r\n\t  } // if\r\n\t} // mousemove\r\n\tobj.node.onmouseup = function(){ \r\n\t  if(active){\r\n\t\t  obj.onend(itemStartPosition);\r\n\t  } // if\r\n\t  active = false;\r\n\t} // onmouseup\r\n\tobj.node.onmouseenter = function(){ active = false; } // onmouseenter\r\n\tobj.node.onmouseleave = function(){ active = false; } // onmouseleave\r\n  } // constructor\r\n  \r\n  \r\n  // Generic hide, show, and position methods.\r\n  show(){\r\n\tlet obj = this;\r\n\tobj.node.style.display = \"\";\r\n  } // show\r\n  \r\n  hide(){\r\n\tlet obj = this;\r\n\tobj.node.style.display = \"none\";\r\n  } // hide\r\n  \r\n  set position(point){\r\n\tlet obj = this;\r\n\tobj.node.style.left = point[0] + \"px\";\r\n\tobj.node.style.top  = point[1] + \"px\";\r\n  } // set position\r\n  \r\n  get position(){\r\n\t  let obj = this;\r\n\t  return [\r\n\t    parseFloat(obj.node.style.left),\r\n\t\tparseFloat(obj.node.style.top)\r\n\t  ]\r\n  } // get position\r\n  \r\n  // superclass method defined in the subclasses.\r\n  checksize(){} // checksize\r\n  \r\n  \r\n  // Dummy method. Superset in NavigationManager to trigger the minimap update.\r\n  onmove(){} // onmove\r\n  \r\n  // Dummy method. Superset in Navigationmanager.track to allow adding to groups.\r\n  onend(){} // onend\r\n  \r\n} // Item","import Item from \"./Item.js\";\r\n\r\n\r\n// How will the individual draw? The group will have to follow the same idea. Or? maybe the drawing would just access a specific module, like geometry or smth, and that isn't implemented yet. And then the same thing can be added to the group?\r\nexport default class Individual extends Item {\r\n  constructor(task){\r\n    super();\r\n    let obj = this;\r\n\t\r\n\t// The task is important, because \r\n\tobj.task = task;\r\n\tobj.node.querySelector(\"span.label\").innerHTML = task.taskId;\r\n\t\r\n  } // constructor\r\n  \r\n  checksize(){\r\n\tlet obj = this;\r\n\t// Check size to decide what to do. In cases where many items are drawn the cumulative memory required to draw the image may be too high, and it's sensible to draw a static image instead.\r\n\t\r\n\tlet rect = obj.node.getBoundingClientRect();\r\n\tif(rect.width < 200){\r\n\t\t// Paint the inside red.\r\n\t\tobj.viewnode.style.background = obj.task.color;\r\n\t\tobj.viewnode.style.opacity = 1;\r\n\t} else {\r\n\t\t// Turn it back to default values.\r\n\t\tobj.viewnode.style.background = \"\";\r\n\t\tobj.viewnode.style.opacity = 0.001;\r\n\t} // if\r\n  } // checksize\r\n  \r\n} // Individual","// Link has access to the nodes, but it will have it's own offsets. This allows the drawnode to change its values correctly.\r\nexport default class DrawLink{\r\n\t// Indices when exiting parent node, entering child node, and the index of position of the bend.\r\n\tpi = 0\r\n\tci = 0\r\n\tbendi = 0\r\n\t\r\n\t// Actual dimensions. The label width is the minimum horizontal line length. Bundle width is the space reserved for the vertical line width. Line width is the actual width of the white outline. The default radius is the basis for the actual bend radii.\r\n\tnode_label_width = 70\r\n\tbundle_width = 4\r\n\tline_width = 4\r\n\tr = 16\r\n\t\r\n\tconstructor(parentnode, childnode, author){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// So that hte locations can be changed on hte go.\r\n\t\tobj.parentnode = parentnode;\r\n\t\tobj.childnode = childnode;\r\n\t\tobj.author = author;\r\n\t\t\r\n\t\t// Exit radius is determined node level difference.\r\n\t\tobj.r1 = (childnode.level - parentnode.level)*obj.r;\r\n\t\tobj.r2 = obj.r;\r\n\t} // constructor\r\n\t\r\n\tget path(){\r\n\t\t// Doesn't take into account the offsets yet!!\r\n\t\t\r\n\t\t\r\n\t\t// Allow this to return a straight path, or a curved one. The straight path is exclusively for bundles that have only one parent. Furthermore, that one should only be allowed when connecting nodes on the same height. So maybe just base the decision off of that?\r\n\t\t\r\n\t\t// Straight path is just M0 0 L40 0 or so.\r\n\t\t\r\n\t\tlet obj = this;\r\n\t\t\t\t\r\n\t\t\r\n\t\tlet dyc = obj.ci*obj.line_width + obj.childnode.markerEmptyIn;\r\n\t\tlet dyp = obj.pi*obj.line_width + obj.parentnode.markerEmptyOut;\r\n\t\t\r\n\t\t// The target x should be > `xHorizontal + r1 + r2'\r\n\t\tlet xHorizontal = obj.parentnode.x + obj.node_label_width + obj.bendi*obj.bundle_width;\r\n\t\t\r\n\t\t\r\n\t\t// Origin and target MUST be at least `[node_label_width + 2*r, 2*r]' apart otherwise the graphic logic doesn't follow.\r\n\t\tlet origin = {\r\n\t\t\tx: obj.parentnode.x,\r\n\t\t\ty: obj.parentnode.yMarkerStart + dyp\r\n\t\t}\r\n\t\t\r\n\t\tlet target = {\r\n\t\t\tx: obj.childnode.x,\r\n\t\t\ty: obj.childnode.yMarkerStart + dyc\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tlet arc1start = {\r\n\t\t\tx: xHorizontal - obj.r1,\r\n\t\t\ty: origin.y\r\n\t\t}\r\n\t\t\r\n\t\tlet arc1end = {\r\n\t\t\tx: xHorizontal,\r\n\t\t\ty: origin.y + obj.r1\r\n\t\t}\r\n\r\n\t\tlet arc2start = {\r\n\t\t\tx: xHorizontal,\r\n\t\t\ty: target.y - obj.r2\r\n\t\t}\r\n\t\t\r\n\t\tlet arc2end = {\r\n\t\t\tx: xHorizontal + obj.r2,\r\n\t\t\ty: target.y\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t/*\r\n\t\tHow the path is made up.\r\n\t\tstart point                   : M0 0\r\n\t\thorizontal line               : L40 0\r\n\t\tfirst bend to vertical        : A16 16 90 0 1 46 16\r\n\t\tvertical line                 : L46 34\r\n\t\tsecond bend to horizontal     : A16 16 90 0 0 62 50\r\n\t\thorizontal connection to node : L62 50\r\n\t\t*/\r\n\t\tlet p = `M${ origin.x } ${ origin.y } L${ arc1start.x } ${ arc1start.y } A${ obj.r1 } ${ obj.r1 } 90 0 1 ${ arc1end.x } ${ arc1end.y } L${ arc2start.x } ${ arc2start.y } A${ obj.r2 } ${ obj.r2 } 90 0 0 ${ arc2end.x } ${ arc2end.y } L${ target.x } ${ target.y }`; \r\n\t\treturn p\r\n\t} // path\r\n\t\r\n} // DrawLink","import { svg2element } from \"../../helpers.js\";\r\nimport DrawLink from \"./DrawLink.js\";\r\n\r\n// Lines are drawn in bundles. The links are drawn as two pats, one in color, and the other white. The white paths are in the background and help make the transitions over lines neater. If links were drawn individually then the bundle itself would have an overlap somewhere.\t\r\nlet template = `\r\n<g class=\"bundle\">\r\n  <path stroke=\"white\" stroke-width=\"5\" fill=\"none\"></path>\r\n  <path stroke=\"black\" stroke-width=\"2\" fill=\"none\"></path>\r\n</g>\r\n`; // tempalte\r\n\r\n\r\n// These should just be exposed at the link level... The tree level also has them, and it's non hygienic.\r\nlet node_label_width = 70\r\nlet bundle_width = 4\r\nlet line_width = 4\r\nlet r = 16\r\n\r\n// Bundles are the connections between two levels of nodes.\r\nexport default class treebundle{\r\n\t// Index is the ranked position of this bundle within hte level. It determines the position of hte vertical line segment, and the corner radius.\r\n\tlinks = []\r\n\t_bendi = 0;\r\n\t\r\n\tconstructor(seednode, author){\r\n\t\t// A seed node is passed in to define the bundle parents and thus instantiate a bundle. After instantialisation only the children of the bundle can change.\r\n\t\t// NOTE: seednode is a `treenode' instance, but parents and children are `taskgroup' instances. The level is only defined for the node because it can change when the user interacts with the tree.\r\n\t\tlet obj = this;\r\n\t\tobj.node = svg2element( template );\r\n\t\t\r\n\t\tobj.author = author,\r\n\t\tobj.level = seednode.level;\r\n\t\tobj.parents = seednode.connections.parents;\r\n\t    obj.children = [seednode.connections.group];\r\n\t\t\r\n\t\tobj.nodeChildren = [seednode];\r\n\t\tobj.nodeParents = [];\r\n\t\t\r\n\t} // constructor\r\n\t\r\n\tset bendi(i){\r\n\t\t// When a bunldes bend index is set it should propagate it to all the children.\r\n\t\tlet obj = this;\r\n\t\tobj.links.forEach(link=>{\r\n\t\t\tlink.bendi = i;\r\n\t\t}) // forEach\r\n\t\tobj._bendi = i;\r\n\t} // bendi\r\n\t\r\n\tget bendi(){return this._bendi} // get bendi\r\n\t\r\n\tupdate(color){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// There's two paths, an upper color and bottom white.\r\n\t\tlet paths = obj.node.querySelectorAll(\"path\");\r\n\t\tfor(let i=0; i<paths.length; i++){\r\n\t\t\tpaths[i].setAttribute(\"d\", obj.path)\r\n\t\t} // for\r\n\t\t\r\n\t\tif(color){\r\n\t\t\tpaths[paths.length-1].setAttribute(\"stroke\", color);\r\n\t\t} // if\r\n\t\t\r\n\t\tif(!obj.author){\r\n\t\t\tpaths[paths.length-1].setAttribute(\"stroke-dasharray\", \"5,2\");\r\n\t\t} // if\r\n\t} // update\r\n\t\r\n\t\r\n\taddparent(node){\r\n\t\t// Only nodes can be pushed. And only the ones declared upon initialisation!\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\tlet isNodeAllowed = obj.parents.includes(node.connections.group);\r\n\t\tlet isNodeUnknown = !obj.nodeParents.includes(node);\r\n\t\t\r\n\t\tif( isNodeAllowed && isNodeUnknown ){\r\n\t\t\tobj.nodeParents.push(node);\r\n\t\t\tobj.updateNodeMinPositions();\r\n\t\t} // if\r\n\t} // addparent\r\n\t\r\n\taddchild(node){\r\n\t\tlet obj = this;\r\n\t\tif(!obj.children.includes(node.connections.group)){\r\n\t\t\tobj.children.push(node.connections.group);\r\n\t\t} // if\r\n\t\t\r\n\t\tif(!obj.nodeChildren.includes(node)){\r\n\t\t\tobj.nodeChildren.push(node);\r\n\t\t\tobj.updateNodeMinPositions();\r\n\t\t} // if\r\n\t} // addchild\r\n\t\r\n\tmakelinks(){\r\n\t\tlet obj = this;\r\n\t\t\t\t\t\r\n\t\t// Links must be made for every child-parent combination. Strictly speaking at least one link must be made for all the children, and at least one link must connect to every parent.\r\n\t\tlet links = []\r\n\t\t\r\n\t\tobj.nodeParents.forEach(p=>{\r\n\t\t\tobj.nodeChildren.forEach(c=>{\r\n\t\t\t\tlinks.push( new DrawLink(p,c) )\r\n\t\t\t}) // forEach\r\n\t\t}) // forEach\r\n\t\t\r\n\t\tobj.links = links;\r\n\t\t\r\n\t} // links\r\n\t\r\n\t\r\n\t// Make the full path here??\r\n\tget path(){\r\n\t\tlet obj = this;\r\n\t\treturn obj.links.map(link=>link.path).join(\"\")\r\n\t} // path\r\n\t\r\n\t\r\n\tget width(){\r\n\t\t// The width of the bundle is the fixed horizontal distance plus the number of bundles multiplied by the width reserved for the vertical line segment. The nodes, and therefore the lines are not yet positioned properly, therefore their width cannot be used to calculate the bunlde width. But they can be just summed together though!\r\n\t\t// Note that this is the minimum width of spanning one level, and not the entire width of the bundle, which may include lines spanning multiple levels!\r\n\t\t\r\n\t\treturn node_label_width + obj.bundles.length*bundle_width + r;\r\n\t} // get width\r\n\t\r\n\tupdateNodeMinPositions(){\r\n\t\t// This should just be run whenever teh parents or the children are changed.\r\n\t\t// Because the links make two 90 degree turns when connecting the parent to the child the radii of these turns constitute the minimum y offset of this bundle relative to the previous one. Furthermore, this is offset relative to the lowest parent! This is important when positioning the child nodes.\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\tlet y_lowest_parent = obj.nodeParents.reduce((acc, p)=>{\r\n\t\t\treturn acc > p.y ? acc : p.y\r\n\t\t}, 0)\r\n\t\t\r\n\t\tobj.nodeChildren.forEach(child=>{\r\n\t\t\tchild.miny = y_lowest_parent + 2*r;\r\n\t\t}) // forEach\r\n\t\t\r\n\t} // y_min\r\n\t\r\n} // treebundle","let node_label_width = 70; // length of text\r\nlet bundle_width = 4; // reserved space for the vertical bunlde line\r\nlet r = 16; // arc radius\r\n\r\n// A level is an organisational group. All dimensioning is done through a treelevel. The primary elements that define the level are its bundles. The TreeLevel is necessary because the bundles need to be sequenced within a level, and the level width is required to position hte levels. Because the bundles are based on a set of parents, the level of the bundle is the level of the children.\r\nexport default class TreeLevel{\r\n  constructor(nodes, bundles, nlevel){\r\n\t\tlet obj = this;\r\n\t\tobj.n = nlevel;\r\n\t\tobj.bundles = bundles.filter(b=>b.level==nlevel);\r\n\t\tobj.nodes = nodes.filter(n=>n.level==nlevel);\r\n\t} // constructor\r\n\t\r\n\tget width(){\r\n\t\t// The width of the entire level. It's the width of the label plus the width of all the vertical line segments (including padding), plus the length of the finishing horizontal segment (this is zero for the right-most bundle).\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// The width of the level is determined by the bundles that end in it. If there aren't any bundles, there is no width. Maybe do a reduce and move the width calculation to the bundle? That would eliminate the dimensions here.\r\n\t\tif(obj.bundles.length > 0){\r\n\t\t\treturn node_label_width + obj.bundles.length*bundle_width + r;\r\n\t\t} else {\r\n\t\t\treturn 0\r\n\t\t} // if\r\n\t} // width\r\n} // TreeLevel","import { arrayEqual } from \"../../helpers.js\";\r\n\r\nimport TreeBundle from \"./TreeBundle.js\";\r\nimport TreeLevel from \"./TreeLevel.js\";\r\n/* \r\nA defined group hierarchy (groups, group members, and group parents have been established) is passed in. The input data is an array of groups to be drawn.\r\n\r\nThis is the background data based on which a tree chart can be established. Interactions with the tree don't change the underlying group hierarchy, only the drawn representation.\r\n*/\r\n\r\n/*\r\nNode height -> number of bundles connecting to it\r\nNode x -> depends on the levels and their widths\r\nNode y -> position of parent nodes\r\nLevel width -> number of bundles\r\nBundle links -> parent/child nodes\r\n*/\r\n\r\nfunction getBundleLinesGoingThroughNode(bundle, node){\r\n\t// Given some bundles find which of its lines go through a specific node. Whether the lines are incoming or outgoing is not needed, because it's determined by the relationship between the bundles and the node. Instead the node must just be referenced by the line.\r\n\treturn bundle.links.filter(link=>{\r\n\t\treturn link.childnode == node || link.parentnode == node;\r\n\t}) // filter\r\n} // getBundleLines\r\n\t\r\nfunction arrangeIncomingOutgoingTracks(node, bundles){\r\n\t// To draw the node I need to know where to start, how big it should be, and I should also know what the label is, and what the corresponding tags are.\r\n\t\r\n\t// Each bundle should be staggered when entering a particular node. But bundles can also hold lines of several authors. These should be staggered as well.\r\n\t\t\r\n\tlet outgoingbundles = bundles.filter(b=>{\r\n\t\treturn b.parents.includes( node.connections.group );\r\n\t}) // filter\r\n\t\r\n\tlet incomingbundles = bundles.filter(b=>{\r\n\t\treturn b.children.includes( node.connections.group );\r\n\t}) // filter\r\n\t\r\n\t\r\n\t// Bundles spanning multiple levels should be all the way at the top. Then they should be ordered by bundle ind. Larger bendi means bend happens more to the right.\r\n\tincomingbundles.sort((a,b)=>{\r\n\t\treturn b.level - a.level || b.bendi - a.bendi;\r\n\t}) // sort\r\n\t\r\n\toutgoingbundles.sort((a,b)=>{\r\n\t\treturn b.level - a.level || b.bendi - a.bendi;\r\n\t}) // sort\r\n\t\r\n\t// This should be improved. First of all, the track indices and the bundle indices should be coordinated by sorting the lines by bundle ind before assigning the track ind. Secondly, it would be good if bundles of the same color could maintain same track positions...\r\n\t\r\n\t\r\n\t// Assign the index of track to enter the node by.\r\n\tincomingbundles.forEach((bundle,i)=>{\r\n\t\tlet lines = getBundleLinesGoingThroughNode(bundle, node);\r\n\t\tlines.forEach(line=>{\r\n\t\t\tline.ci = i;\r\n\t\t})\r\n\t}) // forEach\r\n\t\r\n\toutgoingbundles.forEach((bundle,i)=>{\r\n\t\tlet lines = getBundleLinesGoingThroughNode(bundle, node);\r\n\t\tlines.forEach(line=>{\r\n\t\t\tline.pi = i;\r\n\t\t})\r\n\t}) // forEach\r\n\t\r\n\t\r\n\t// Set number of incoming bundles.\r\n\tnode.nbundlesin  = incomingbundles.length;\r\n\tnode.nbundlesout = outgoingbundles.length;\r\n\t\r\n\t\t\r\n} // arrangeIncomingOutgoingTracks\r\n\r\nfunction arrangeBundlesOfLevel(bundles){\r\n\t\r\n\tbundles.sort((a,b)=>{\r\n\t\t// How to sort by similarity? Similarity is based on a pairs, not on individual. Maybe order by size, and then progressively do smaller sorts? Or just sort the nodes, and adjust the bundles to that?\r\n\t\t\r\n\t\t// Sort by size.\r\n\t\treturn b.children.length - a.children.length;\r\n\t}) // sort\r\n\t\r\n\t\r\n\t\r\n\t// But it also depends on hte nodes in hte previous level? So just arrange them sensibly? Go through them and assign minimum y positions based on the parents. This can later be used to create further bundles?\r\n\t\r\n\t\r\n\t// Maybe the nodes should just track the indices of the paths that lead to them? Sort of a history? That would also allow the longest chain to be identified. And then the level indices of the paths/bundles can be used to determine the order.\r\n\t\r\n\t\r\n\t// Maybe if the up-path is also allowed it can be used to reclaim some space after a particular branch ends?\r\n\t\r\n\t// The bundle needs an ind for within the level. This can be used to sort the bundle links horizontally. The location of the vertical line segment is determined based on this index.\r\n\tlet maxBundleInd = bundles.length - 1;\r\n\tbundles.forEach((b,i)=>{\r\n\t\tb.bendi = maxBundleInd - i;\r\n\t}) // forEach\r\n\t\r\n\t\r\n} // arrangeBundlesOfLevel\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction getbundles(nodes){\r\n\t\t\r\n\t// The bundles should be differentiated based on tag authors.\r\n\tlet bundleseeds = nodes.filter(node=>{\r\n\t\treturn node.connections.parents.length > 0;\r\n\t}) // filter\r\n\t\r\n\t\r\n\t// The `taskgroup' objects have several tags connected to them. Each tag represents a group that was created by some user. For every author of a group there should be a different bundle connecting to it. Even if the tag has only been created for that specific group.\r\n\t\r\n\t\r\n\t// Two bundles are not necessarily the same if htey have the same parents. They should be differentiated by the user tag also.\r\n\t\r\n\tlet bundles = bundleseeds.reduce(function(bundles, node){\r\n\t\t\r\n\t\t// This node may belong to several bundles made by different authors. Find thos bundles, and if they can't be found create them.\r\n\t\tnode.connections.group.tags.forEach(tag=>{\r\n\t\t\tlet existing = bundles\r\n\t\t\t  .filter(b=>b.author==tag.author)\r\n\t\t\t  .filter(b=>arrayEqual(b.parents, node.connections.parents))\r\n\t\t\t  \r\n\t\t\tif(existing.length>0){\r\n\t\t\t\texisting.forEach(b=>{\r\n\t\t\t\t\tb.addchild(node)\r\n\t\t\t\t}) // forEach\r\n\t\t\t} else {\r\n\t\t\t\tbundles.push( new TreeBundle(node, tag.author) )\r\n\t\t\t} // if\r\n\t\t})\r\n\t\t\r\n\t\treturn bundles\r\n\t}, []) // map\r\n\t\r\n\t\r\n\t\r\n\t// Go through hte nodes one more time to assign the parent nodes also. Originally only the groups are assigned as parents as the incoming nodes don't reference other nodes, but the groups do reference each other.\r\n\t// `treebundle' instances will check whether parents are valid.\r\n\tnodes.forEach(node=>{\r\n\t\tbundles.forEach(bundle=>{\r\n\t\t\tbundle.addparent(node);\r\n\t\t})\r\n\t}) // forEach\r\n\t\r\n\t\r\n\t// Make sure the bundles create all the required links.\r\n\tbundles.forEach(bundle=>{\r\n\t\tbundle.makelinks();\r\n\t})\r\n\t\r\n\t\t\r\n\treturn bundles;\r\n} // get bundles\r\n\r\nfunction getlevels(nodes, bundles){\r\n\t\t\r\n\t// Always create all new levels!!\r\n\tlet levels = []\r\n\t\r\n\t// Find all the levels from the bundles.\r\n\tlet maxlevel = Math.max( ...nodes.map(n=>n.level) )\r\n\tfor(let level=0; level<maxlevel+1; level++){\r\n\t\tlevels.push( new TreeLevel(nodes, bundles, level) )\r\n\t} // for\r\n  \r\n\treturn levels\r\n} // get levels\r\n\r\n\r\n\r\n// Maybe devolve this one into TreeRender and hierarchy?\r\n\r\n// The user can only click on the nodes to directly interact with the tree. Currently the 'collapsenode' is used for that.\r\nexport function dimensioning(nodes){\r\n\t// `dimension' calculates the positions of the nodes on the screen, and dimensions the connecting links.\r\n\tnodes.forEach(node=>node.clear())\r\n  \r\n\t// Need to get teh levels so that I have a constant copy... mobx would probably improve this, but it'll do for now. Maybe it'd just be better to collect this with some sort of functions? And not getters?\r\n\tlet bundles = getbundles(nodes);\r\n\tlet levels = getlevels(nodes, bundles);\r\n\t\r\n\t\r\n\t// First order the bundles within hte levels.\r\n\tlevels.forEach(level=>arrangeBundlesOfLevel(level.bundles)); // forEach\r\n\t\r\n\t\r\n\t// ASSIGN INCOMING/OUTGOING INDICES TO LINES.\r\n\tnodes.forEach(node=>arrangeIncomingOutgoingTracks(node, bundles)); // forEach\r\n  \r\n\t\r\n\t// Last thing is to position the nodes.\r\n\tlet x_offset = 0;\r\n\tlevels.forEach(level=>{\r\n\t\t\t\t\t\t\t\t\r\n\t\t// Recalculate the minimum node positions.\r\n\t\tlevel.bundles.forEach(b=>b.updateNodeMinPositions());\r\n\t\t\r\n\t\t// Now sort the nodes by their miny to conserve as much space as possible.\r\n\t\tlevel.nodes.sort((a,b)=>{\r\n\t\t\treturn a.miny - b.miny\r\n\t\t}) // sort\r\n\t\t\r\n\t\t// With the sizes of the nodes defined, the x and y locations can be assigned. The x location depends on the level, and the y location on the order within hte level.\r\n\t\tx_offset += level.width;\r\n\t\tlet y_offset = 0;\r\n\t\tlevel.nodes.forEach(n=>{\r\n\r\n\t\t\tn.x = x_offset;\r\n\t\t\tn.y = y_offset;\r\n\t\t\r\n\t\t\t// Compute offset for next node. This is just offset within the level!\r\n\t\t\ty_offset = n.y + n.markersize + n.pitch\r\n\t\t}) // forEach\r\n\t}) // forEach\r\n\r\n\treturn {\r\n\t\tnodes: nodes,\r\n\t\tbundles: bundles\r\n\t}\r\n} // dimensioning\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { svg2element } from \"../../helpers.js\";\r\n\r\n\r\n\t\r\n// d, node=>node.path\r\n// text -> \t\"x\", node => node.labelx, \"y\", node => node.labely, label node=>node.label\r\nlet template = `\r\n<g class=\"node\" cursor=\"pointer\">\r\n  <g class=\"marker\">\r\n    <path class=\"outline\" stroke=\"black\" stroke-width=\"8\" stroke-linecap=\"round\"></path>\r\n    <path class=\"fill\" stroke=\"white\" stroke-width=\"4\" stroke-linecap=\"round\"></path>\r\n  </g>\r\n  <g class=\"label\">\r\n    <rect rx=\"5\" ry=\"5\" fill=\"none\"></rect>\r\n    <text class=\"unselectable\" stroke=\"white\" stroke-width=\"2\" font-size=\"10px\"></text>\r\n    <text class=\"unselectable\" stroke=\"black\" stroke-width=\"0.5\" font-size=\"10px\"></text>\r\n  </g>\r\n</g>\r\n`; // template\r\n\r\n// A treenode object is a higher level wrapper that contains all the dimensioning information. The `connections' attribute is supposed to hold the `treegroup' object, which contains a reference the an individual group, all it's ancestors, it's direct parents, and all its descendants.\r\nexport default class TreeNode{\r\n\tx = undefined\r\n\t_y = 0\r\n\tminy = 0\r\n\t\r\n\t// Line width is the width of the incoming line. The pitch is the vertical spacing to the next node.\r\n\tline_width = 4\r\n\tpitch = 32\r\n\t\r\n\tnbundlesin = 0\r\n\tnbundlesout = 0\r\n\t\r\n\thidden = false;\r\n\t\r\n\tconstructor(treegroup){\r\n\t\tlet obj = this;\r\n\t\tobj.node = svg2element( template );\r\n\t\t// The treegroup holds all the connections of a particular group.\r\n\t\tobj.connections = treegroup;\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\tlet label = obj.node.querySelector(\"g.label\");\r\n\t\tlabel.addEventListener(\"mouseenter\", function(){ obj.highlighttext(true) });\r\n\t\tlabel.addEventListener(\"mouseout\" , function(){ obj.highlighttext(false) });\r\n\t\t\r\n\t\tlet marker = obj.node.querySelector(\"g.marker\");\r\n\t\tmarker.onmouseenter = function(){ obj.highlightmarker(true) }\r\n\t\tmarker.onmouseleave = function(){ obj.highlightmarker(false) }\r\n\t} // constructor\t\r\n\t\r\n\t\r\n\tupdate(){\r\n\t    let obj = this;\r\n\t\t\r\n\t\tlet marker = obj.node.querySelector(\"g.marker\");\r\n\t\tlet paths = marker.querySelectorAll(\"path\");\r\n\t\t\r\n\t\tlet label = obj.node.querySelector(\"g.label\");\r\n\t\tlet texts = label.querySelectorAll(\"text\");\r\n\t\t\r\n\t\t\r\n\t\tfor(let i=0; i<paths.length; i++){\r\n\t\t\tpaths[i].setAttribute(\"d\", `M${ obj.x } ${ obj.yMarkerStart } L${ obj.x } ${ obj.yMarkerStart + obj.markersize }`)\r\n\t\t} // for\r\n\t\t\r\n\t\tlabel.setAttribute(\"transform\", `translate(${obj.labelx}, ${obj.labely})`);\r\n\t\tfor(let i=0; i<texts.length; i++){\r\n\t\t\ttexts[i].innerHTML = obj.label;\r\n\t\t} // for\r\n\t\t\r\n\t\tobj.updateBackgroundRectSize();\r\n\t} // update\r\n\t\r\n\t\r\n\t\r\n\tupdateBackgroundRectSize(){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\tlet t = obj.node.querySelector(\"g.label\").querySelectorAll(\"text\")[1];\r\n\t\tlet rect = obj.node.querySelector(\"g.label\").querySelector(\"rect\");\r\n\t\tlet textbox = t.getBBox();\r\n\t\t\r\n\t\trect.setAttribute(\"x\", textbox.x - textbox.width*0.05);\r\n\t\trect.setAttribute(\"y\", textbox.y);\r\n\t\trect.setAttribute(\"width\", textbox.width*1.1);\r\n\t\trect.setAttribute(\"height\", textbox.height*1.1);\r\n\t} // updatebackgroundRectSize\r\n\t\r\n\t\r\n\thighlightselect(){\r\n\t\t// Just toggle the background rect, and the text color. Let it still respond to mouseover font increases.\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\tlet t = obj.node.querySelector(\"g.label\").querySelectorAll(\"text\");\r\n\t\tlet rect = obj.node.querySelector(\"g.label\").querySelector(\"rect\");\r\n\t\t\r\n\t\t// Text fill is now white.\r\n\t\tt[0].setAttribute(\"fill\", \"black\");\r\n\t\tt[0].setAttribute(\"stroke\", \"black\");\r\n\r\n\t\tt[1].setAttribute(\"fill\", \"white\");\r\n\t\tt[1].setAttribute(\"stroke\", \"white\");\r\n\r\n\t\t// Set the rect\r\n\t\trect.setAttribute(\"fill\", \"black\");\r\n\t} // highlightselect\r\n\t\r\n\t\r\n\tunhighlightselect(){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\tlet t = obj.node.querySelector(\"g.label\").querySelectorAll(\"text\");\r\n\t\tlet rect = obj.node.querySelector(\"g.label\").querySelector(\"rect\");\r\n\t\t\r\n\t\t// Text fill is now white.\r\n\t\tt[0].setAttribute(\"fill\", \"white\");\r\n\t\tt[0].setAttribute(\"stroke\", \"white\");\r\n\r\n\t\tt[1].setAttribute(\"fill\", \"black\");\r\n\t\tt[1].setAttribute(\"stroke\", \"black\");\r\n\r\n\r\n\t\trect.setAttribute(\"fill\", \"none\");\r\n\t} // unhighlightselect\r\n\t\r\n\t\r\n\t\r\n\t\r\n\thighlighttext(v){\r\n\t\tlet obj = this;\r\n\t\tlet size = v ? \"12px\" : \"10px\";\r\n\t\tlet texts = obj.node.querySelector(\"g.label\").querySelectorAll(\"text\");\r\n\t\tfor(let i=0; i<texts.length; i++){\r\n\t\t\ttexts[i].setAttribute(\"font-size\", size);\r\n\t\t} // for\r\n\t\tobj.updateBackgroundRectSize();\r\n\t} // highlighttext\r\n\t\r\n\thighlightmarker(v){\r\n\t\tlet obj = this;\r\n\t\tlet size = v ? 10 : 8;\r\n\t\tlet outline = obj.node.querySelector(\"g.marker\").querySelector(\"path.outline\");\r\n\t\toutline.setAttribute(\"stroke-width\", size);\r\n\t} // highlighttext\r\n\t\r\n\tclear(){\r\n\t\tlet obj = this;\r\n\t\tobj.x = undefined;\r\n\t\tobj._y = 0;\r\n\t\tobj.miny = 0;\r\n\t\tobj.nbundlesin = 0;\r\n\t\tobj.nbundlesout = 0;\r\n\t} // clear\r\n\t\r\n\t\r\n\r\n\tset y(val){\r\n\t\tlet obj = this;\r\n\t\tobj._y = val\r\n\t} // set y\r\n\t\r\n\tget y(){\r\n\t\tlet obj = this;\r\n\t\treturn Math.max(obj._y, obj.miny)\r\n\t} // get y\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tget yMarkerStart(){\r\n\t\tlet obj = this;\r\n\t\tlet yoffset = obj.markersize > 0 ? obj.line_width/2 : 0;\r\n\t\treturn obj.y - obj.markersize/2 + yoffset;\r\n\t} // markery\r\n\t\r\n\tget markersize(){\r\n\t\treturn Math.max(this.nbundlesin-1, this.nbundlesout-1, 0)*this.line_width;\r\n\t} // markersize\r\n\t\r\n\tget markerEmptyIn(){\r\n\t\t// If the marker is larger than the width of the lines coming in, then the lines should be centered in hte middle of the marker. Calculate the empty space from hte marker start to where the lines should begin.\r\n\t\tlet obj = this;\r\n\t\treturn (obj.markersize - (obj.nbundlesin-1)*obj.line_width) / 2;\r\n\t} // markerEmptyIn\r\n\t\r\n\tget markerEmptyOut(){\r\n\t\tlet obj = this;\r\n\t\treturn (obj.markersize - (obj.nbundlesout-1)*obj.line_width) / 2;\r\n\t} // markerEmptyIn\r\n\t\r\n\t\r\n\t\r\n\t// Label to be displayed next to it. Shouldn't be larger than the node_label_width.\r\n\tget label(){\r\n\t\tlet obj = this;\r\n\t\tlet name = obj.connections.group.tags.length > 0 ? obj.connections.group.tags[0].name : \"Root\";\r\n\t\t\r\n\t\t// Temporarily changed to show n tasks for troubleshooting.\r\n\t\t// let n = obj.connections.descendants.length;\r\n\t\tlet n = obj.connections.group.members.length;\r\n\t\treturn `${name} ${n > 0 ? `(${ n })`: \"\"}`\r\n\t} // label\r\n\t\r\n\tget labelx(){\r\n\t\treturn this.x + 4;\r\n\t} // labelx\r\n\t\r\n\tget labely(){\r\n\t\treturn this.yMarkerStart - 4;\r\n\t} // labely\r\n\t\r\n\t\r\n\t\r\n} // TreeNode\r\n\r\n","import {arrayEqual, arrayIncludesAll} from \"../../helpers.js\";\r\n/*\r\nIf all the tasks are in the same array, and the author information is on the tags, then the partial trees won;t be a problem.\r\n\r\nEvery tag represents a group possibility essentially. But the same tag can relate to different groups. The group members differentiate the groups. The different tag descriptions of the groups should all be presented on mouseover, maybe along with the author data.\r\n\r\nWon't be able to remove the initial dialogue in the small multiples visualisation, but I will be able to get rid of the expand button on the small multiples.\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n// FROM AN ARRAY OF TASKS WITH TAGS TO A TREE\r\n\r\n\r\nexport function array2tree(array){\r\n\t/*\r\n\t1.) Find groups.\r\n\t2.) Merge them.\r\n\t3.) Create parent-child relationships\r\n\t*/\r\n\t\r\n\t// Find all created groups, and merge the ones with identical members.\r\n\tlet groups = findAllTagBasedGroups(array);\r\n\tlet mergedgroups = mergeIdenticalGroups(groups);\r\n\t\r\n\t// Convert the groups into a higher level object to avoid circular references when figuring out ancestry.\r\n\tlet hierarchicalnodes = findParentalRelationships(mergedgroups);\r\n\t\r\n\treturn hierarchicalnodes\r\n\t\r\n} // array2tree\r\n\r\n\r\n// The tree node represents a single group, but also holds references to the parent and child nodes. The treenode is a higher level object to avoid circular referencing of objects.\r\nclass treegroup{\r\n\tconstructor(taskgroup){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\tobj.group = taskgroup;\r\n\t\t\r\n\t\t// Groups CAN have more than 1 parent. While it's true that during a single dive through the tasks each group can only have one parent, it's possible that additional dives (by the same, or other users) will produce the same groups, but tracing different steps. The merging already combines all identical groups, so the merged groups can have multiple parents.\r\n\t\t// Select the parents as all those candidate  groups that have not been referenced by other candidate groups already.\r\n\t\tobj.ancestors = []; // All upstream groups\r\n\t\tobj.parents = []; // Only groups directly above this one.\r\n\t\t\r\n\t\tobj.descendants = []; // All downstream groups\r\n\t\tobj.children = []; // Only groups immediately below this one.\r\n\t} // constructor\r\n} // treegroup\r\n\r\nclass taskgroup{\r\n\tconstructor(){\r\n\t\tthis.tags = [];\r\n\t\tthis.members = [];\r\n\t} // constructor\r\n\t\r\n\taddtask(task){\r\n\t\tlet obj = this;\r\n\t\tif(!obj.members.includes(task)){\r\n\t\t\tobj.members.push(task);\r\n\t\t} // if\r\n\t} // addtask\r\n\t\r\n\taddtag(tag){\r\n\t\tlet obj = this;\r\n\t\tif( !obj.tags.some(existing=>existing.id == tag.id) ){\r\n\t\t\tobj.tags.push(tag);\r\n\t\t} // if\r\n\t} // addtags\r\n} // group\r\n\r\n\r\n\r\n// Making groups.\r\nfunction findAllTagBasedGroups(array){\r\n\t\r\n\t// Create a group for each tag present in the array. We also need to differentiate teh groups by the author at this point. Otherwise parallel trees won't be possible.\r\n\tlet dict = {};\r\n\tlet groups = [];\r\n\t\r\n\tarray.forEach(tag=>{\r\n\t\t// If you tag something in the session, then that tag is reserved for a particular group. If you tag other elements with it, it'll become a part of that group. Actual tags need to be retained in order to be able to edit them, and therefore edit the groups.\r\n\t\tlet groupid = `${tag.name}-${tag.author}`;\r\n\t\tif(!dict[groupid]){\r\n\t\t\t// Here just pass the tag in. The group will need to hold on to it.\r\n\t\t\tdict[groupid] = new taskgroup();\r\n\t\t\tdict[groupid].temporary = tag.author == undefined;\r\n\t\t\tgroups.push(dict[groupid]);\r\n\t\t} // if\r\n\t\t\r\n\t\t// Add teh task to the specific group, but also to the root group.\r\n\t\tdict[groupid].addtask(tag.taskId);\r\n\t\tdict[groupid].addtag(tag);\r\n\t}) // forEach\r\n\t\r\n\t\r\n\t\r\n\t// A root group should be present. It will be merged with other existing groups if possible in hte next tep.\r\n\tlet root = makeRootGroup(array);\r\n\t\r\n\r\n\treturn groups.concat(root);\r\n\t\r\n} // findAllTagBasedGroups\r\n\r\n\r\n\r\nfunction makeRootGroup(array){\r\n\t\r\n\t// The root MUST always contain all of the data!! It will also allow navigation all the way to the start.\r\n\tlet root = new taskgroup();\r\n\troot.root = true;\r\n\t\r\n\t// Root should contain all tasks.\r\n\tarray.forEach(tag=>{\r\n\t\troot.addtask(tag.taskId);\r\n\t}) // forEach\r\n\t\r\n\treturn root\r\n\t\r\n} // makeRootGroup\r\n\r\nfunction mergeIdenticalGroups(groups){\r\n\t\r\n\tlet mergedgroups = groups.reduce((acc,g)=>{\r\n\t\t// Find group with identical members.\r\n\t\tlet identicalg = acc.filter(g_=>{\r\n\t\t\treturn arrayEqual(g_.members, g.members)\r\n\t\t}) // filter\r\n\t\t\r\n\t\tif(identicalg.length > 0){\r\n\t\t\t// Add another author to existing group.\r\n\t\t\tg.tags.forEach(tag=>{\r\n\t\t\t\tidenticalg[0].addtag(tag);\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\t// Add this group to the unique ones.\r\n\t\t\tacc = acc.concat(g);\r\n\t\t} // if\r\n\t\t\r\n\t\treturn acc\r\n\t},[]) // reduce\r\n\t\r\n\treturn mergedgroups\r\n\t\r\n} // mergeIdenticalGroups\r\n\r\nfunction isSubset(a,b){\r\n\t// Check whether array a is a subset of array b.\r\n\t\r\n\t// A must be strictly smaller than b.\r\n\tif(a.length < b.length){\r\n\t\t// Check if b contains all of a.\r\n\t\treturn arrayIncludesAll(b, a);\r\n\t} else {\r\n\t\treturn false;\r\n\t} // if\r\n\t\r\n} // isSubset\r\n\r\nfunction findParentalRelationships(groups){\r\n\t\r\n\t\r\n\t// First create an object one level above to avoid cross referenceing of objects.\r\n\tlet nodes = groups.map(g=>{return new treegroup(g)});\r\n\t\r\n\t// maybe calculate all ancestors, all descendants, and then parents and children? Could be useful to have all hte information available.\r\n\t\r\n\t\r\n\t// FIND PARENT CANDIDATES FOR ALL GROUPS.\r\n\tnodes.forEach(node=>{\r\n\t\t// Ancestor groups are all groups that include all of the members of the node group, but are larger than it.\r\n\t\tnode.ancestors = groups.filter(g=>{\r\n\t\t\treturn isSubset(node.group.members, g.members)\r\n\t\t}) // filter\r\n\t\t\r\n\t\t\r\n\t\t// Descendant groups are all groups that contain a subset of the members of this group.\r\n\t\tnode.descendants = groups.filter(g=>{\r\n\t\t\treturn isSubset(g.members, node.group.members)\r\n\t\t});\r\n\t}) // forEach\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Groups CAN have more than 1 parent. While it's true that during a single dive through the tasks each group can only have one parent, it's possible that additional dives (by the same, or other users) will produce the same groups, but tracing different steps. The merging already combines all identical groups, so the merged groups can have multiple parents.\r\n\t// Select the parents as all those candidate  groups that have not been referenced by other candidate groups already.\r\n\t\r\n\t\r\n\t\r\n\t// Loop over all the candidates of a particular group, and remove all candidates that appear in that.\r\n\tnodes.forEach(node=>{\r\n\t\tnode.parents = node.ancestors;\r\n\t\t// All parents of a candidate parent are considered `grandparents'. All grandparents cannot be the parent. Loop over the candidates and remove all grandparents. Candidates also include teh candidates parents, so the whole lineage is checked.\r\n\t\tnode.parents.forEach(candidate=>{\r\n\t\t\t\r\n\t\t\t// The candidate now no longer has parents. Just check directly? If another group contains all the members of a group then it is its parent.\r\n\t\t\tnode.parents = node.parents.filter(parent=>{\r\n\t\t\t\tif(candidate == parent){\r\n\t\t\t\t\t// A candidate can't eliminate himself.\r\n\t\t\t\t\treturn true\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn !isSubset(candidate.members, parent.members);\r\n\t\t\t\t} // if\r\n\t\t\t}) // filter\r\n\t\t}) // forEach\r\n\t\t\t\r\n\t\t\r\n\t\t// The children are useful when navigating, as it allows the creation of groups that are immediately below the current node.\r\n\t\tnode.children = node.descendants;\r\n\t\tnode.children.forEach(candidate=>{\r\n\t\t\tnode.children = node.children.filter(child=>{\r\n\t\t\t\tif(candidate == child){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// a is subset of b.\r\n\t\t\t\t\t// I'm filtering out the children, and any children that are a subset of the candidate can no longer be candidates themselves.\r\n\t\t\t\t\treturn !isSubset(child.members, candidate.members)\r\n\t\t\t\t} // if\r\n\t\t\t}); // filter\r\n\t\t}); // forEach\r\n\t}) // forEach\r\n\t\r\n\treturn nodes\r\n\t\r\n\t\r\n} // findParentalRelationships\r\n\r\n\r\n\r\n\r\nexport function calculateLevelNumbers(nodes){\r\n\t\r\n\t// First clear all the levels and set any root ones.\r\n\tnodes.forEach(node=>{\r\n\t\tnode.level = undefined;\r\n\t\tif(node.connections.parents.length == 0){\r\n\t\t\tnode.level = 0;\r\n\t\t} // if\r\n\t})\r\n\t\r\n\t// Now move through the nodes and check if all parents already had a level assigned. If so the level of the node is max(parents.level) + 1. This must be done until all the nodes have an assigned level.\r\n\t\r\n\t\r\n\tfor(let i=0; i<nodes.length; i++){\r\n\t\t\r\n\t\tlet unassignednodes = nodes.filter(node=>node.level==undefined);\r\n\t\t\r\n\t\tunassignednodes.forEach(node=>{\r\n\t\t\t// All parents must have an assigned level, otherwise skip. Check if any don't have level.\r\n\t\t\tlet parents = node.connections.parents.reduce((acc,parent)=>{\r\n\t\t\t\treturn acc.concat(nodes.filter(node=>node.connections.group == parent))\r\n\t\t\t}, []) // reduce\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif( parents.some(parent=>parent.level==undefined) ){\r\n\t\t\t\t// Some don't have level assigned. Skip.\r\n\t\t\t} else {\r\n\t\t\t\tnode.level = Math.max(...parents.map(parent=>parent.level)) + 1;\r\n\t\t\t} // if\r\n\t\t}) // forEach\r\n\t\t\r\n\t\t\r\n\t\tif(unassignednodes.length == 0){ break; } // if\r\n\t} // for\r\n\t\r\n} // calculateLevelNumbers\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import TreeNode from \"./TreeNode.js\";\r\nimport {array2tree, calculateLevelNumbers} from \"./hierarchy.js\";\r\n\r\nexport default class TreeHierarchy{\r\n  constructor(){\r\n\t  let obj = this;\r\n\t  \r\n\t  // How should the temporary groups be differentiated from the actual ones? Inside the groups are differentiated by \"<tag.name>-<tag.author>\". So maybe check if the author is undefined, and if so mark it as a temporary group?\r\n\t  obj.temporary = [];\r\n\t  obj.annotations = [];\r\n\t  \r\n\t  obj.collapsednodes = [];\r\n\t  \r\n\t  obj.update();\r\n  } // constructor\r\n  \r\n  update(){\r\n\t// Recalculate makes new treenodes. Maybe instead of having hidden nodes just have hidden tasks? And any group that consists only of the hidden tasks is hidden also? That's how the hierarchy creation works anyway.\r\n\t// Nah, just push the togglig to the node itself! However, anytime that the data will be recalculated the hidden aspect will disappear....\r\n\tlet obj = this;\r\n\t\r\n\t// obj.temporary are actual 'Group' objects which are converted into temporary annotations on-the-go.\r\n\tlet i = -1;\r\n\tlet temporaryAnnotations = obj.temporary.reduce((acc, g)=>{\r\n\t\t// The dummy annotation needs to have a unique id, name, author, and task ids.\r\n\t\treturn acc.concat(g.members.map(item=>{\r\n\t\t\ti += 1;\r\n\t\t\treturn {id: `temp${i}`, name: \"Unsaved\", author: undefined, taskId: item.task.taskId}\r\n\t\t})) // concat\r\n\t}, []); // reduce\r\n\t\r\n\t\r\n\tobj.nodes = array2tree(obj.annotations.concat(temporaryAnnotations)).map(group=>{\r\n\t\treturn new TreeNode(group);\r\n\t}); // map\r\n  } // update\r\n  \r\n  get visiblenodes(){\r\n\tlet obj = this;\r\n\t\r\n\tlet collapsednodes = obj.nodes.filter(node=>node.hidden);\r\n\t\r\n\t// Based on the collapsed nodes determine which ones are still visible. I can ignore any incorrect nodes here. But I would rather just get rid of them.\r\n\tlet hiddennodes = obj.nodes.filter(node=>{\r\n\t\treturn collapsednodes.some(collapsed=>{\r\n\t\t\treturn collapsed.connections.descendants.includes(node.connections.group)\r\n\t\t}) // some\r\n\t}) // filter\r\n\t\t\r\n\t// Filter out any disabled nodes. Maybe this can be made more sophisticated so that the folds further down the line are preserved?\r\n\tlet nodes = obj.nodes.filter(node=>{\r\n\t\treturn !hiddennodes.includes(node)\r\n\t});\r\n\t\t\r\n\r\n\t// The level numbers should be assigned to all active nodes.\r\n\tcalculateLevelNumbers(nodes);\r\n\t\t\r\n\t\t\r\n\treturn nodes\r\n  } // get nodes\r\n} // TreeHierarchy\r\n\r\n\r\n\r\n// HELPERS\r\n","/* `TreeRender' is the class that defines and executes the tree interactions.\r\n\r\n- dimensioning spatially places the nodes and links.\r\n \r\n*/\r\n\r\n\r\n\r\n// Move the hierarchy to CORE!!\r\nimport { dimensioning } from \"./dimensioning.js\";\r\nimport TreeHierarchy from \"./TreeHierarchy.js\";\r\n\r\nimport {svg2element, scaleCategorical} from \"../../helpers.js\";\r\n\r\n\r\n\r\n/* TODO\r\n- Connect to a scatter plot for interactive tag addition.\r\n- Handle unassigned tasks.\r\n*/\r\n\r\n/* ADVANCED\r\n- Single parent bundles should allow for straight links too.\r\n\r\n- How to display very large trees?\r\n\tMake the tree zoomable?\r\n\r\n- How should the group descriptions be presented? \r\n\tNumber of tasks, number of children, text description, AUTHOR!! All the data is available. Maybe on text hover all the information should be displayed?? Maybe in a tooltip?\r\n- Which label to select when making nodes?\r\n\tThe current author should be allowed to control their branch. This would require some differentiation between users. Certainly can't be done now. For now just select the first one?\r\n- How to merge the groups interactively? I.e. a git pull.\r\n*/\r\n\r\n/* DONE\r\n- Collapsible nodes - collapse, with the folding history saved.\r\n- Enforce partial branches to be inserted - tree created on bundle level.\r\n- Make text unselectable - add into app css\r\n- Fix node mouseover css - css affects specific child of mover g.\r\n*/\r\n\r\n\r\n\r\n\r\nlet template = `\r\n<g transform=\"translate(20, 20)\">\r\n  <g class=\"bundles\"></g>\r\n  <g class=\"nodes\"></g>\r\n  <g class=\"nodetooltip\"></g>\r\n  <g class=\"linktooltip\"></g>\r\n</g>\r\n`;\r\n\r\n\r\n\r\nexport default class TreeKnowledge {\r\n\t\r\n\t\r\n\tconstructor(){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// Hierarchy\r\n\t\tobj.hierarchy = new TreeHierarchy();\r\n\t\t\r\n\t\t// Drawing\r\n\t\tobj.node = svg2element( template );\r\n\t\tobj.gnodes = obj.node.querySelector(\"g.nodes\");\r\n\t\tobj.gbundles = obj.node.querySelector(\"g.bundles\");\r\n\t\t\r\n\t\tobj.color = new scaleCategorical();\r\n\t\t\r\n\t\t\r\n\t\t// The tree is redrawn on every interaction. To allow the user to ee where on the tree they currently are just highlight the group that contains all the relevant items.\r\n\t\tobj.currenttasks = [];\r\n\t\t\r\n\t} // constructor\r\n\t\r\n\t\r\n\t\r\n\tset data(d){\r\n\t\tthis.hierarchy.annotations = d;\r\n\t} // set data\r\n\t\r\n\tget data(){\r\n\t\treturn this.hierarchy.annotations;\r\n\t} // get data\r\n\t\r\n\tset temporary(d){\r\n\t\tthis.hierarchy.temporary = d;\r\n\t} // set temporary\r\n\t\r\n\tget temporary(){\r\n\t\treturn this.hierarchy.temporary;\r\n\t} // get temporary\r\n\t\r\n\tclear(){\r\n\t\t// When clearing by looping through .children and .remove() it only removed the nodes in the last step. When redrawing it added all of them back somehow...\r\n\t\tlet obj = this;\r\n\t\tobj.gnodes.innerHTML = \"\";\r\n\t\tobj.gbundles.innerHTML = \"\";\r\n\t} // clear\r\n\t\r\n\tinteract(){\r\n\t\tlet obj = this;\r\n\t\tobj.clear();\r\n\t\tobj.map = dimensioning( obj.hierarchy.visiblenodes );\r\n\t\tobj.updatenodes();\r\n\t\tobj.updatelines();\r\n\t} // interact\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tupdate(){\r\n\t\tlet obj = this;\r\n\t\tobj.hierarchy.update();\r\n\t\tobj.interact();\r\n\t} // update\r\n\t\r\n\t// The functionality is added in here. Maybe refactor to remove the nestedness??\r\n\tupdatenodes(){\r\n\t\tlet obj = this\r\n\t\t\r\n\t\tobj.map.nodes.forEach(nodeobj=>{\r\n\t\t\t\r\n\t\t\t// Check if the group should be highlighted.\r\n\t\t\tlet iscurrent = !nodeobj.connections.group.members.some(taskId=>!obj.currenttasks.includes(taskId))\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tobj.gnodes.appendChild( nodeobj.node );\r\n\t\t\tnodeobj.update();\r\n\t\t\tif(iscurrent){\r\n\t\t\t\tnodeobj.highlightselect();\r\n\t\t\t} // if\r\n\t\t\t\r\n\t\t\t// Add teh styling changes on mouseover. Clicking the label moves view to the group.\r\n\t\t\tlet label = nodeobj.node.querySelector(\"g.label\");\r\n\t\t\tlabel.onclick = function(){ \r\n\t\t\t\tobj.moveto(nodeobj.connections);\r\n\t\t\t} // onclick\r\n\t\t\tlabel.addEventListener(\"mouseenter\", function(){\r\n\t\t\t\tobj.crossreferencein(nodeobj.connections.group.members)\r\n\t\t\t}) // addEventListener\r\n\t\t\tlabel.addEventListener(\"mouseout\", function(){\r\n\t\t\t\tobj.crossreferenceout();\r\n\t\t\t}) // addEventListener\r\n\t\t\t\r\n\t\t\t// Clicking on hte node just collapses branches.\r\n\t\t\tnodeobj.node.querySelector(\"g.marker\").onclick = function(){\r\n\t\t\t\tnodeobj.hidden = !nodeobj.hidden;\r\n\t\t\t\tobj.interact();\r\n\t\t\t} // onclick\r\n\r\n\t\t}) // forEach\r\n\t\t\r\n\t} // updatenodes\r\n\t\r\n\t\r\n\tupdatelines(){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// The renderer controls the color of the lines!!\r\n\t\tobj.map.bundles.forEach(bundleobj=>{\r\n\t\t\tobj.gbundles.appendChild( bundleobj.node )\r\n\t\t\tbundleobj.update( obj.color.dom2range(bundleobj.author) )\r\n\t\t}) // forEach\r\n\t} // updatelines\r\n\t\r\n\tmoveto(connections){\r\n\t\t// I want to move to the group which contains only tasks given by \"nodeobj.connections.group.members\", but I also want to show all the groups within that grop.\r\n\t\tconsole.log(\"Move to\", nodeobj.connections.group.members)\r\n\t} // moveto\r\n\t\r\n\tcrossreferencein(taskids){\r\n\t\t// Dummy method that takes in taskids and allows for them to be highlighted on a different plot.\r\n\t} // crossreferencein\r\n\t\r\n\tcrossreferenceout(taskids){\r\n\t\t// Dummy method to signal end of cross reference\r\n\t} // crossreferenceout\r\n\t\r\n} // TreeKnowledge","import { svg2element } from \"../../helpers.js\";\r\n\r\nlet template = `<circle r=\"5\" fill=\"cornflowerblue\"></circle>`; // template\r\n\r\nexport default class MiniMapIcon{\r\n    constructor(item){\r\n\t\tlet obj = this;\r\n\t\tobj.item = item;\r\n\t\tobj.node = svg2element(template);\r\n\t} // constructor\r\n\t\r\n\r\n\tupdate(xscale, yscale, highlight){\r\n\t\t// The scales must be given from the parent, and the icon uses them to position itself.\r\n\t\t// The scales should incorporate both the panning and zooming adjustements needed.\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// Update the position of the circle with the center point of the DOM card.\r\n\t\tlet itemClientRect = obj.item.node.getBoundingClientRect();\r\n\t\t\t\r\n\t\tlet x = itemClientRect.left + itemClientRect.width/2;\r\n\t\tlet y = itemClientRect.top + itemClientRect.height/2;\r\n\t\t\r\n\t\tobj.node.setAttribute(\"cx\", xscale.dom2range( x ));\r\n\t\tobj.node.setAttribute(\"cy\", yscale.dom2range( y ));\r\n\t\t\r\n\t\t\r\n\t\tobj.node.setAttribute(\"fill\", highlight ? \"orange\" : \"cornflowerblue\");\r\n\t\tobj.node.setAttribute(\"display\", obj.item.node.style.display );\r\n\t\t\r\n\t\t\r\n\t\t// Support for groups.\r\n\t\tif(obj.item.members){\r\n\t\t\t// The area of the group of n items should be n times larger?\r\n\t\t\tobj.node.setAttribute(\"r\", Math.sqrt( obj.item.members.length )*5)\r\n\t\t}; // if\r\n\t} // update\r\n\t\r\n\t\r\n\thighlight(){\r\n\t\tlet obj = this;\r\n\t\tobj.node.setAttribute(\"fill\", \"orange\");\r\n\t} // highlight\r\n\t\r\n\tunhighlight(){\r\n\t\tlet obj = this;\r\n\t\tobj.node.setAttribute(\"fill\", \"cornflowerblue\");\r\n\t} // unhighlight\r\n\t\r\n} // MiniMapIcon","import { svg2element, isWithinBoundingClientRect } from \"../../helpers.js\";\r\n\r\nlet template = `<rect class=\"current\" x=\"50\" y=\"10\" width=\"150\" height=\"50\" fill=\"black\" opacity=\"0.5\"></rect>`\r\n\r\nexport default class MiniMapViewRect{\r\n\t\r\n\tconstructor(){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\tobj.node = svg2element(template);\r\n\t\t\r\n\t\t\r\n\t\t// Make it draggable.\r\n\t\tlet active, clickedItemOffset;\r\n\t\r\n\t\r\n\t\tobj.node.onmousedown = function(e){\r\n\t\t\tactive = true;\r\n\t\t\t\r\n\t\t\t// Correcting for clicked position within item.\r\n\t\t\tlet itemClientRect = obj.node.getBoundingClientRect();\r\n\t\t\tclickedItemOffset = {\r\n\t\t\t\tx: itemClientRect.x - e.clientX,\r\n\t\t\t\ty: itemClientRect.y - e.clientY\r\n\t\t\t} // clickedItemOffset\r\n\t\t} // onmousedown\r\n\t\tobj.node.onmousemove = function(e){\r\n\t\t\tif(active){\r\n\t\t\t\t// Convert the mouse position into the position within the parent SVG. ASSUME that the parent element is the SVG.\r\n\t\t\t\tlet svgClientRect = obj.node.parentElement.getBoundingClientRect();\r\n\t\t\t\t\r\n\t\t\t\t// Check if the mouse left the svg.\r\n\t\t\t\t\r\n\t\t\t\tif(isWithinBoundingClientRect({x: e.clientX, y: e.clientY}, svgClientRect)){\r\n\t\t\t\t\tlet x = e.clientX - svgClientRect.x + clickedItemOffset.x;\r\n\t\t\t\t\tlet y = e.clientY - svgClientRect.y + clickedItemOffset.y;\r\n\t\t\t\t\t\r\n\t\t\t\t\tobj.node.setAttribute(\"x\", x);\r\n\t\t\t\t\tobj.node.setAttribute(\"y\", y);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Now all the DOM items should be moved.\r\n\t\t\t\t\tobj.reposition();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tactive = false;\r\n\t\t\t\t} // if\r\n\t\t\t\t\r\n\t\t\t} // if\r\n\t\t} // mousemove\r\n\t\tobj.node.onmouseup   = function(){\r\n\t\t\tactive = false;\r\n\t\t} // onmouseup\r\n\t\t\r\n\t\t\r\n\t} // constructor\r\n\t\r\n\t\r\n\tinit(xscale, yscale){\r\n\t\tlet obj = this;\r\n\t\t// Reposition the viewrect back to the origin.\r\n\t\tobj.node.setAttribute(\"x\",  xscale.dom2range(0) );\r\n\t\tobj.node.setAttribute(\"y\",  yscale.dom2range(0) );\r\n\t} // init\r\n\t\r\n\t\r\n\t// The data to position the icons comes from boundingClientRect, which is the positions on hte screen. In that case\r\n\tupdate(xscale, yscale){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// The viewrect represents the window.\r\n\t\tlet width = xscale.dom2range(window.innerWidth) - xscale.dom2range(0);\r\n\t\tlet height = yscale.dom2range(window.innerHeight) - yscale.dom2range(0);\r\n\t\t\r\n\t\tobj.node.setAttribute(\"width\",  width )\r\n\t\tobj.node.setAttribute(\"height\", height )\r\n\t} // update\r\n\t\r\n\t// Dummy function that gets changed by the minimap;\r\n\treposition(){} // reposition\r\n\t\r\n} // MiniMapViewRect","import { svg2element, scaleLinear, isWithinBoundingClientRect } from \"../../helpers.js\";\r\nimport MiniMapIcon from \"./MiniMapIcon.js\";\r\nimport MiniMapViewRect from \"./MiniMapViewRect.js\";\r\n/*\r\nThe initial arrangement is not the problem of this module. This module just visualises the current arrangement, and allows global navigation.\r\n\r\nThe panning/zooming should be made available on hte background also.\r\n*/\r\nconst template = `<svg style=\"border: 2px solid gainsboro; display: block;\">\r\n  <g class=\"icons\"></g>\r\n</svg>`; // template\r\n\r\n\r\n// All the data should be on the minimap at all times, including any rearranged items. That means that the scale domain may have to be redone every time there is a rearrangement event.\r\n\r\n\r\nexport default class MiniMap{\r\n\t\r\n\twidth = 300;\r\n\theight = 200;\r\n\t_icons = [];\r\n\t\r\n\tconstructor(){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\tobj.node = svg2element(template);\r\n\t\tobj.node.setAttribute(\"width\", obj.width);\r\n\t\tobj.node.setAttribute(\"height\", obj.height);\r\n\t\t\r\n\t\t\r\n\t\t// The rectangle should have the proportions of the screen.\r\n\t\t\r\n\t\t\r\n\t\t// Abstract the viewrect out??\r\n\t\tobj.viewrect = new MiniMapViewRect();\r\n\t\tobj.node.appendChild(obj.viewrect.node)\r\n\t\t\r\n\t\t// Scrolling is added to the the rect externally!\r\n\t\t\r\n\t\t// Create the scales to map the necessary range to the size of the svg.\r\n\t\tobj.xscale = new scaleLinear();\r\n\t\tobj.xscale.range = [0, obj.width];\r\n\t\t\r\n\t\tobj.yscale = new scaleLinear();\r\n\t\tobj.yscale.range = [0, obj.height];\r\n\t\t\r\n\t\t\r\n\t\t// Maybe it's just simpler to keep re-rendering the MiniMap? So the update doesn't have to be called everywhere?\r\n\t\t// Maybe not, because a lot of the time it's just the re-centering of hte data that is needed?\r\n\t\t\r\n\t} // constructor\r\n\t\r\n\t\r\n\thighlight(taskids){\r\n\t\t// Go through the icons and light up the ones with th eappropriate item.\r\n\t\tlet obj = this;\r\n\t\tobj.icons.forEach(icon=>{\r\n\t\t\t// Some icons represent groups, which have multiple taskIds.\r\n\t\t\tif(icon.item.members){\r\n\t\t\t\t// This is a group - highlight it if any/all elements are part of it?\r\n\t\t\t\tlet memberids = icon.item.members.map(memberitem=>memberitem.task.taskId);\r\n\t\t\t\tif(memberids.some(id=>taskids.includes(id))){\r\n\t\t\t\t\ticon.highlight();\r\n\t\t\t\t} // if\r\n\t\t\t} else {\r\n\t\t\t\tif(taskids.includes(icon.item.task.taskId)){\r\n\t\t\t\t\ticon.highlight();\r\n\t\t\t\t} // if\r\n\t\t\t} // if\r\n\t\t\t\r\n\t\t}) // forEach\r\n\t} // highlight\r\n\t\r\n\tunhighlight(){\r\n\t\t// Turn them all off.\r\n\t\tlet obj = this;\r\n\t\tobj.icons.forEach(icon=>{\r\n\t\t\ticon.unhighlight();\r\n\t\t}) // forEach\r\n\t} // unhighlight\r\n\t\r\n\t\r\n\t// icons getter/setter - to dynamically filter out any group sthat are removed.\r\n\tset icons(ic){\r\n\t\tthis._icons = ic;\r\n\t} // set icons\r\n\t\r\n\tget icons(){\r\n\t\treturn this._icons.filter(icon=>{\r\n\t\t\treturn icon.item.node.isConnected ? true : icon.node.remove();\r\n\t\t})\r\n\t} // get icons\r\n\t\r\n\t\r\n\tgetoffset(){\r\n\t    let obj = this;\r\n\t    return [ obj.xscale.range2dom( obj.viewrect.node.getAttribute(\"x\") ),\r\n\t             obj.yscale.range2dom( obj.viewrect.node.getAttribute(\"y\") ) ];\r\n\t} // getoffset\r\n\t\r\n\t\r\n\t// The groups dynamically added to the workspace must also appear on the minimap.\r\n\tadd(item){\r\n\t\tlet obj = this;\r\n\t\tlet icon = new MiniMapIcon(item);\r\n\t\tobj.node.querySelector(\"g.icons\").appendChild(icon.node); \r\n\t\tobj._icons.push(icon);\r\n\t} // add\r\n\t\r\n\t\r\n\tremove(item){\r\n\t\tlet obj = this;\r\n\t\t// Remove the icon, and the underlying obj.\r\n\t\tlet i = obj.icons.map(icon=>icon.item).indexOf(item);\r\n\t\tobj.icons[i].node.remove()\r\n\t\tobj.icons.splice(i, 1);\r\n\t} // remove\r\n\t\r\n\t\r\n\t// Update the circle representations.\r\n\tupdate(items){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// If items have been given, then change the circles.\r\n\t\tif(items){\r\n\t\t\titems.forEach(item=>{\r\n\t\t\t\tobj.add(item);\r\n\t\t\t}); // forEach\r\n\t\t} // items\r\n\t\t\r\n\t\t\r\n\t\t// New items arrived, the square is resized, and the icons should be positioned. Make the items all fit within the square? Or just map the screen directly onto the minimap? Or just scale the square to what can be seen on the main screen?\r\n\t\t\r\n\t\t\r\n\t\t// Redraw minimap\r\n\t\tobj.centerdata();\r\n\t\tobj.viewrect.init(obj.xscale, obj.yscale);\r\n\t\tobj.render();\r\n\t\t \r\n\t} // update\r\n\t\r\n\t\r\n\tcenterdata(){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// The minimap should show all the items at all times, thus the minimap domain needs to span all the positions of the items in both the x and y dimensions, while preserving AR=1. The data AR won't be the same as the minimap AR, and therefore the data domain is recalculated to fit into the minimap square.\r\n\t\t\r\n\t\tlet domains = calculateInitialMinimapDomain(obj.icons.map(icon=>icon.item));\r\n\t\t\r\n\t\t// The maximum domain AR must be selected to accomodate all the data. Then the domains can be centered on hte minimap.\r\n\t\tlet xdiff = domains.x[1] - domains.x[0];\r\n\t\tlet ydiff = domains.y[1] - domains.y[0];\r\n\t\tlet u = 1.1*Math.max( xdiff / obj.width, ydiff / obj.height )\r\n\t\t\r\n\t\t// Reset the scale domains to center the data.\r\n\t\tobj.xscale.domain = [domains.x[0] + xdiff/2 - u*obj.width/2, domains.x[0] + xdiff/2 + u*obj.width/2];\r\n\t\tobj.yscale.domain = [domains.y[0] + ydiff/2 - u*obj.height/2, domains.y[0] + ydiff/2 + u*obj.height/2];\r\n\t\t\r\n\t} // centerdata\r\n\t\r\n\t\r\n\trender(){\r\n\t\t// Redraw the minimap. Called after the user rearranges the items.\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// Resize the viewrect to the right aspect ratio and size.\r\n\t\tobj.viewrect.update(obj.xscale, obj.yscale);\r\n\t\tlet r = obj.viewrect.node.getBoundingClientRect();\r\n\t\t\r\n\t\t// Redo the icons if they are active.\r\n\t\tobj.icons.forEach(icon=>{\r\n\t\t\ticon.update(obj.xscale, obj.yscale);\r\n\t\t}) // forEach\r\n\t} // render\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n} // Minimap\r\n\r\n\r\n\r\nfunction calculateInitialMinimapDomain(items){\r\n\t// The workspace and the minimap have no domain limitations, but the minimap should initially be scaled such that all the points are in view. When zooming the rectangle will then change size when scrolled.\r\n\t\r\n\tlet bodyClientRect = document.body.getBoundingClientRect();\r\n\t\r\n\treturn items.reduce((acc,item)=>{\r\n\t\tlet itemClientRect = item.node.getBoundingClientRect();\r\n\t\t\r\n\t\t// Calculate the positions of hte icons based on the center of the item.\r\n\t\tlet minx = itemClientRect.left - bodyClientRect.left;\r\n\t\tlet maxx = itemClientRect.left - bodyClientRect.left + itemClientRect.width;\r\n\t\t \r\n\t\tlet miny = itemClientRect.top - bodyClientRect.top;\r\n\t\tlet maxy = itemClientRect.top - bodyClientRect.top + itemClientRect.height;\r\n\t\t\r\n\t\tacc.x[0] = minx < acc.x[0] ? minx : acc.x[0];\r\n\t\tacc.x[1] = maxx > acc.x[1] ? maxx : acc.x[1];\r\n\t\t\r\n\t\tacc.y[0] = miny < acc.y[0] ? miny : acc.y[0];\r\n\t\tacc.y[1] = maxy > acc.y[1] ? maxy : acc.y[1];\r\n\t\treturn acc\r\n\t}, {\r\n\t\tx: [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY], \r\n\t\ty: [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY]\r\n\t}) // reduce\r\n} // calculateInitialMinimapDomain","import {svg2element} from \"../../helpers.js\";\r\n\r\n\r\nlet template = `\r\n<polygon class=\"lasso\" points=\"\" style=\"fill: cornflowerblue; stroke: dodgerblue; stroke-width: 2; opacity: 0.4;\"></polygon>\r\n`; // template\r\n\r\n\r\nexport default class Lasso{\r\n\t/* \r\n\t\t`lasso' implements a generic lasso that can be added to svg elements.\r\n\t\r\n\tThe lasso logs the selected points and updates the graphic. If the underlying svg spans across the entire client viewport, then no readjustment of the coordinates is needed.\r\n\t*/\r\n\t\r\n\tconstructor(svg){\r\n\t\t\r\n\t\t// Make reactive??\r\n\t\r\n\t\tlet obj = this;\r\n\t\r\n\t\tobj.svg = svg;\r\n\t\tobj.polygon = svg.appendChild( svg2element(template) );\r\n\t\t\r\n\t\t// An internal boundary is used for all the drawing, and an external boundary is presented to other interested modules. Only the exposed boundary is observable. The exposed boundary is used to determine the lasso selection.\r\n\t\tobj._boundary = [];\r\n\t\tobj.boundary = [];\r\n\r\n\t\t// Should the boundary be stored at all??\r\n\t\tobj.svg.addEventListener(\"mousedown\", function(event){\r\n\t\t\tobj.clearBoundary();\r\n\t\t}) // mousedown\r\n\r\n\t\tobj.svg.addEventListener(\"mousemove\", function(event){\r\n\t\t\tif(obj.active){\r\n\t\t\t\tobj.addBoundaryPoint(event);\r\n\t\t\t\tobj.draw();\r\n\t\t\t} // if\r\n\t\t}) // mousedown\r\n\t\t\r\n\t\tobj.svg.addEventListener(\"mouseup\", function(event){\r\n\t\t\tobj.hide();\r\n\t\t\t\r\n\t\t\t// The bounadry.replace was mobx functionality.\r\n\t\t\tobj.boundary = obj._boundary;\r\n\t\t\tobj.active = false;\r\n\t\t\tobj.svg.style.zIndex = \"\";\r\n\t\t\t\r\n\t\t\t// Dummy function that allows responses.\r\n\t\t\tobj.onend();\r\n\t\t}) // mousedown\r\n\t\r\n\t} // constructor\r\n\t\r\n\t\r\n\t\r\n\r\n\t\r\n\t\r\n\tclearBoundary(){\r\n\t\tlet obj = this;\r\n\t\tobj._boundary = [];\r\n\t} // clearBoundary\r\n\r\n\taddBoundaryPoint(event){\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// The svgbox changes if the user scrolls around in the window.\r\n\t\tlet svgbox = obj.svg.getBoundingClientRect();\r\n\t\t\r\n\t\tobj._boundary.push({\r\n\t\t\tx: event.clientX - svgbox.x,\r\n\t\t\ty: event.clientY - svgbox.y\r\n\t\t})\r\n\t\t\r\n\t} // addBoundaryPoint\r\n\t\r\n\tisPointInside(point){\r\n\t\t// Check wheteher the 'point' [pixel coordinates] is within the polygon defined by the points array 'boundary'.\r\n\t\tlet obj = this;\r\n\t\t\r\n\t\t// Default answer is no.\r\n\t\tlet isInside = false\r\n\t\t\r\n\t\tlet n = obj.boundary.length\r\n\t\tif(n>2){\r\n\t\t\tfor(let i=1; i<n; i++){\r\n\t\t\t\t// Check whether this edge is being passed when moving from the point to the right. If it passes an even number of edges it's outside, otherwise it's inside.\r\n\t\t\t\tlet p = passesEdge(obj.boundary[i-1], obj.boundary[i], point)\r\n\t\t\t\tisInside = p ? !isInside : isInside\r\n\t\t\t} // for\r\n\t\t\t\r\n\t\t\t// Need to check the same number of edge segments as vertex points. The last edge should be the last and the first point.\r\n\t\t\tlet p = passesEdge(obj.boundary[n-1], obj.boundary[0], point)\r\n\t\t\tisInside = p ? !isInside : isInside\r\n\t\t} // if\r\n\t\t\r\n\t\treturn isInside\r\n\t} // isPointInside\r\n\t\t\r\n\tdraw(){\r\n\t\tlet obj = this;\r\n\t\tobj.polygon.setAttribute(\"points\", obj._boundary.map(p=>`${p.x},${p.y}`).join(\" \"))\r\n\t} // draw\r\n\t\r\n\thide(){\r\n\t\t// Remove the selection drawing.\r\n\t\tlet obj = this\r\n\t\tobj.polygon.setAttribute(\"points\", \"\")\r\n\t} // remove\r\n\t\r\n\t// Dummy function.\r\n\tonend(){} // onend\r\n\t\r\n} // lasso\r\n\r\n\r\n\r\n// A ray casting method to check whether a point is within a polygon or not.\r\nfunction passesEdge(p0, p1, point){\r\n\t// One point needs to be above, while the other needs to be below -> the above conditions must be different.\r\n\t\r\n\tif( (p0.y > point.y) !== (p1.y > point.y) ){\r\n\t\t// One is above, and the other below. Now find if the x are positioned so that the ray passes through. Essentially interpolate the x at the y of the point, and see if it is larger.\r\n\t\tlet x = (p1.x - p0.x)/(p1.y - p0.y)*(point.y - p0.y) + p0.x\r\n\t\treturn x > point.x\r\n\t\t\r\n\t} else {\r\n\t\treturn false\r\n\t} // if\r\n} // checkIntersect\r\n\t","import { html2element } from \"../helpers.js\";\r\nimport Item from \"./Item.js\";\r\n\r\n\r\n\r\n\r\n/*\r\nGROUPING: \r\nThis item should be support use as a single object, as well as a group. The introduction of a new group, and what happens to the constituent Items is handled outside, so the Item only needs to identify whther it should present itself as a group, or as an individual item. That depends on the number of tasks that come in.\r\n\r\nHow will the data be managed for items in a group? If it follows the Item flow then it will try to load a rendering module, and push data to it, etc.\r\n\r\nIs it still better, in the end, to have a separate group class that takes Items? Ah, but then it will have to either keep making them visible, or pass in the DOM to draw into anyway.\r\n\r\nHave a library that holds all the files, and then distribute them out? The library is an added complication, and if it is the authority on the files it'll have to keep checking all the Items to see which ones still want to keep a copy. Furthermore, the library will have to be passed to the Items so that they can query it.\r\n\r\nJust creating a new Item will require that the sam efiles be reloaded.\r\n\r\nMaybe create a group item, but let it accept Items as the input?\r\n\r\nYes, make a Group class. That will have a viewnode. Then when the usermouses over an element just go to that elements geometry and set it as the group geometry. Then the rendering can be done into the new viewport.\r\n\r\n\r\n\r\n\r\nGroups are always destroyed when something happens to them no? If they are entered they are destroyed, and they can only be exited through the tree? They can be disbanded otherwise.\r\n\r\nBut if you can only navigate out using the tree, then I have to first implement it.\r\nBut the temporary groups should be stored as well - just as the actual groups?\r\n\r\n\r\nMaybe just create all the group items when the data arrives from the server, and store them?? Or create temporary annotations?\r\n\r\nWhen should temporary groups be kept? When it's navigated out of? No, on all navigation tasks the group should be kept, but not otherwise!!\r\n\r\n\r\nENTER/DISSOLVE\r\nButtons should be added to allow the group to be entered or dissolved. maybe no button is needed to enter - a node should appear on the tree. So only dissolve.\r\n\r\n\r\nRELATIVE POSITIONS:\r\nIt's advantageous to store the relative positions of the individual members. Instead of storing them explicitly the group can just store it's original position, and the individual members can just be hidden. When they are revealed again they can jut have their positions adjusted by the delta of the groups current position to the original position. The small multiples are therefore just unpiled in the new location.\r\n\r\n\r\n\r\nSAVING:\r\nThere should be a local and global set of groups. That means that the user must explicitly save his group for it to be submitted to the server. This can be achieved with a tag input.\r\n\r\n\r\nTODO - GROUP INTERACTIONS:\r\nAn initial lasso creates the group.\r\nAdding items (add together, enter tags into form, and dump actual annotations):\r\n  Dragging item over group\r\n  Dragging group over group\r\n  Lassoing group and items\r\n  Lassoing groups\r\n\r\nRemoving items (remove, dump annotations alltogether):\r\n  Long press on preview element?\r\nDon't allow items to be removed when inside a group?\r\n\r\n*/\r\n\r\n\r\nlet icontemplate = `<div class=\"previewicon\"></div>`;\r\n\r\n/* TODO: \r\n\r\n\r\n- entering - only through the navigation tree??\r\n\r\n- dragging other items over it to add them\r\n- lassoing items into existing group??\r\n- in the commenting there should be a tag input with a save button\r\n- the save button should also allow an annotation to be deleted by the author\r\n\r\n\r\n*/\r\n\r\n\r\nexport default class Group extends Item {\r\n\t\r\n  // Main viewport dimensions;\r\n  width = 300;\r\n  height = 200;\r\n  \r\n  icons = [];\r\n  members = [];\r\n  \r\n  temporary = true;\r\n\t\r\n  constructor(items, temporary){\r\n\t// `items' is an array of `Items' which should be grouped together. `temporary' is a flag that differentiates the groups created based on server served annotations or the users lasso operation.\r\n\tsuper();\r\n    let obj = this;\r\n\r\n\t// The label should depcit the group name - where does that come from? Maybe it should just be passed in? Maybe as an array of all names for this group.\r\n\tlet head = obj.node.querySelector(\"div.head\")\r\n\thead.querySelector(\"span.label\").innerHTML = \"Group\";\r\n\t\r\n\tlet dissolvebutton = head.querySelector(\"span.dissolve\");\r\n\tdissolvebutton.style.display = \"\";\r\n\tdissolvebutton.onmousedown = function(){\r\n\t\t// The main item checks if the event is a drag, and stops propagation if so. This happens `onmousedown', which is fired before it can become an `onclick' (which presumably includes the `onmouseup' also?)\r\n\t\tobj.dissolve();\r\n\t}; // onclick\r\n\t\r\n\t\r\n\tlet enterbutton = head.querySelector(\"span.enter\");\r\n\tenterbutton.style.display = \"\";\r\n\tenterbutton.onmousedown = function(){\r\n\t\tobj.enter();\r\n\t}; // onclick\r\n\r\n\t\r\n\t\r\n\t// Store the members.\r\n\tobj.current = items[0];\r\n\t\r\n\t// When deleting an item the current item WILL be deleted (because it was moused onto first). Therefore another item will have to be selected\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\titems.forEach(item=>{\r\n\t\tobj.addmember(item);\r\n\t}) // map\r\n\t\r\n\tobj.temporary = temporary;\r\n\t\r\n  } // constructor\r\n  \r\n  \r\n  \r\n  addmember(item){\r\n\tlet obj = this;\r\n\t\r\n\tobj.members.push(item);\r\n\t\r\n\tfunction uncolorAllIcons(){\r\n\t\t// Control the preview appearance.\r\n\t\tobj.previewnode.querySelectorAll(\"div.previewicon\").forEach(icon=>{\r\n\t\t\ticon.style.background = \"gainsboro\";\r\n\t\t}) // forEach\r\n\t} // coordinateIconColors\r\n\t\r\n\t  \r\n\tlet iconobj = {\r\n\t  item: item,\r\n\t  node: html2element(icontemplate)\r\n\t}; // return\r\n\t\t\r\n\t// Give the correct initial color, and append it.\r\n\titem.hide();\r\n\tobj.previewnode.appendChild( iconobj.node );\r\n\t\t\r\n\t\t\r\n\ticonobj.node.onmouseenter = function(){\r\n\t  // Set current object - important for canvas rendering.\r\n\t  obj.current = iconobj.item;\r\n\t\t\t\r\n\t  // coordinate the colors.\r\n\t  uncolorAllIcons();\r\n\t  iconobj.node.style.background = \"gray\";\r\n\t\t\t\r\n\t\t\t\r\n\t  // Dummy rendering\r\n\t  obj.viewnode.style.background = obj.current.task.color;\r\n\t  obj.viewnode.style.opacity = 1;\r\n\t} // onmouseenter\r\n\t\t\r\n\t\t\r\n\t// Long press release.\r\n\tvar pressTimer;\r\n\tfunction releaseMember(){\r\n\t  obj.release(iconobj)\r\n\t} // releaseMember\r\n\t\t\r\n\ticonobj.node.onmouseup = function(){\r\n\t  clearTimeout(pressTimer);\r\n\t  // Clear timeout\r\n\t  return false;\r\n\t}; // onmouseup\r\n\t\t\r\n\ticonobj.node.onmousedown = function(){\r\n\t  // Set timeout\r\n\t  pressTimer = window.setTimeout(releaseMember, 1000);\r\n\t  return false; \r\n\t}; // onmousedown\r\n\t\r\n\tobj.icons.push(iconobj);\r\n\t\r\n\t\r\n\tobj.temporary = true;\r\n\t  \r\n  } // addmember\r\n  \r\n  \r\n  release(iconobj){\r\n\t  // On release the item is placed back where it was collected! Maybe this is a good interaction??\r\n\t  let obj = this;\r\n\t  \r\n\t  \r\n\t  obj.icons.splice(obj.icons.indexOf(iconobj), 1);\r\n\t  obj.members.splice(obj.members.indexOf(iconobj.item), 1);\r\n\t\t\t\r\n\t  iconobj.node.remove();\r\n\t  iconobj.item.node.style.display = \"\";\r\n\t  \r\n\t  obj.current = obj.icons[0].item;\r\n\t  obj.icons[0].node.style.background = \"gray\";\r\n\t  \r\n\t  // The onmove method is already set to update the minimap - just reuse it.\r\n\t  obj.onmove();\r\n\t  \r\n\t  // Always when an item is released the group becomes temporary.\r\n\t  obj.temporary = true;\r\n  } // release\r\n  \r\n  \r\n  // Dummy method\r\n  enter(){} // enter\r\n  \r\n  \r\n  dissolve(){\r\n\t  let obj = this;\r\n\t  // How should this tell the NavigationManager that it should stop tracking it?\r\n\t  // Maybe just allow NavigationManager to filter out any empty groups whenever it tries to access them?\r\n\t  \r\n\t  // Just remove the node! Then where there is an update needed check if the node still exists? Also reinstate the previous items.\r\n\t  obj.node.remove();\r\n\t  \r\n\t  \r\n\t  // When the group is created the items remain at their locations, and are simply hidden. When the group is dissolved an offset is applied to account for th egroup moving. For items that are included individually by dragging and dropping.\r\n\t  \r\n\t  let offset = [\r\n\t    obj.position[0] - obj.origin[0],\r\n\t\tobj.position[1] - obj.origin[1],\r\n\t  ]; // offset\r\n\t  \r\n\t  obj.members.forEach(item=>{\r\n\t\t  item.position = [\r\n\t\t    item.position[0] + offset[0],\r\n\t\t    item.position[1] + offset[1]\r\n\t\t  ]; // position\r\n\t\t  item.node.style.display = \"\";\r\n\t  }) // forEach\r\n\t  \r\n\t  obj.members = [];\r\n\t  \r\n\t  obj.ondissolve();\r\n  } // dissolve\r\n  \r\n  \r\n  // Dmmy method\r\n  ondissolve(){} // ondissolve\r\n  \r\n  \r\n  reinstate(){\r\n\t  // Reinstate the group by showing it, and hiding all the constituent items.\r\n\t  let obj = this;\r\n\t  \r\n\t  obj.members.forEach(item=>item.hide());\r\n\t  obj.show();\r\n  } // reinstate\r\n  \r\n} // Group","import SpatialCorrelations from \"./arrangement/SpatialCorrelations.js\";\r\nimport TreeKnowledge from \"./tree/TreeKnowledge.js\";\r\nimport MiniMap from \"./minimap/MiniMap.js\";\r\nimport Lasso from \"./lasso/Lasso.js\";\r\nimport Group from \"../grouping/Group.js\";\r\n/*\r\nA drop in class that provides zooming, panning, minimap, and the tree hierarchy navigaton.\r\n*/\r\nexport default class NavigationManager{\r\n\t\r\n  items = []\r\n  _groups = []\r\n  \r\n\t\r\n  scale = 1;\r\n  dx = 0;\r\n  dy = 0;\r\n\t\r\n  constructor(){\r\n    let obj = this;\r\n\t\r\n\t\r\n\tobj.tabletop = document.getElementById(\"tabletop\");\r\n    obj.container = obj.tabletop.querySelector(\"div.scalingwrapper\");\r\n\tobj.sketchpad = document.getElementById(\"sketchpad\");\r\n\t// obj.hudsvg = document.getElementById(\"hudsvg\");\r\n\t\r\n\t// Use transform: scale() to achieve the zoom in and out functionality, and transform: translate(xpx,ypx) for panning. First a default trnasform should be assigned.\r\n\tobj.container.style.transform = `scale(1) translate(0px,0px)`;\r\n\t\r\n\r\n\t// ZOOMING\r\n\tfunction zoom(event) {\r\n\t  event.preventDefault();\r\n\r\n\t  obj.scale += event.deltaY * -0.001;\r\n\r\n\t  // Restrict scale\r\n\t  obj.scale = Math.min(Math.max(.125, obj.scale), 4);\r\n\r\n\t  // Apply scale transform\r\n\t  obj.adjustview();\r\n\t}; // zoom\r\n\t\r\n\t\r\n\t\r\n\t// MINIMAP\r\n\tobj.minimap = new MiniMap();\r\n\tdocument.getElementById(\"minimap\").appendChild(obj.minimap.node);\r\n\t\r\n\tobj.minimap.viewrect.node.onwheel = zoom;\r\n\tobj.minimap.viewrect.reposition = function(){\r\n\t\tlet offset = obj.minimap.getoffset();\r\n\t\tobj.dx = - offset[0] / obj.scale;\r\n\t\tobj.dy = - offset[1] / obj.scale;\r\n\t\t// No minimap update here!!\r\n\t\tobj.container.style.transform = obj.currenttransform();\r\n\t}; // reposition\r\n\t\r\n\t\r\n\t// LASSO \r\n\t// Originally the lasso produced a tooltip, with the options: group, tag, close. Some of the tagging is now done through the commenting system. The lasso can still highlight the selection, and the interface based option for spatial value tags can be used for the tagging. Should that just be a menu on the right?\r\n\tobj.lasso = new Lasso(obj.sketchpad);\r\n\t\r\n\tfunction findItemsInLasso(items){\r\n\t\t\r\n\t\tlet selected = items.reduce((acc, item)=>{\r\n\t\t\tlet itemrect = item.node.getBoundingClientRect();\r\n\t\t\tlet miditem = {\r\n\t\t\t\tx: itemrect.x + itemrect.width/2, \r\n\t\t\t\ty: itemrect.y + itemrect.height/2\r\n\t\t\t};\r\n\t\t\tif(item.node.style.display != \"none\" && obj.lasso.isPointInside(miditem)){\r\n\t\t\t\tacc.push(item);\r\n\t\t\t}; // if\r\n\t\t\treturn acc;\r\n\t\t}, [])\r\n\t\t\r\n\t\treturn selected; \r\n\t} // findItemsInLasso\r\n\t\r\n\t\r\n\tobj.lasso.onend = function(){\r\n\t\t// Only visible items should be selectable!!\r\n\t\t\r\n\t\tlet selectedIndividuals = findItemsInLasso( obj.items );\r\n\t\tif(selectedIndividuals.length > 1){\r\n\t\t\tobj.makegroup(selectedIndividuals, true);\r\n\t\t} // if\r\n\t} // lasso.onend\r\n\t\r\n\t\r\n\t// TABLETOP NAVIGATION\r\n\t// The navigation based on hte tabletop. Here the dragging doesn't move the item, but rather a different element. Furthermore, the type of button click should launch a different event.\r\n\tobj.tabletop.onwheel = zoom;\r\n\t\r\n\tlet active, origin, e0;\r\n\tobj.tabletop.onmousedown = function(e){\r\n\t  // Maybe the target event could be logged on the svg?? And then passed up as necessary?\r\n\t  if(e.target == obj.tabletop || e.target == obj.sketchpad){\r\n\t\tswitch(e.which){\r\n\t\t\tcase 1:\r\n\t\t\t  // Left mouse click - panning.\r\n\t\t\t  // e.preventDefault();\r\n\t\t\t  active = true;\r\n\t\t\t  origin = {x: obj.dx, y: obj.dy};\r\n\t\t\t  e0 = e;\r\n\t\t\t  break;\r\n\t\t\tcase 2:\r\n\t\t\t  // Middle mouse click - lasso.\r\n\t\t\t  // Still elevate the svg to allow drawing over the DOM.\r\n\t\t\t  obj.sketchpad.style.zIndex = 1000;\r\n\t\t\t  obj.lasso.clearBoundary();\r\n\t\t\t  obj.lasso.active = true;\r\n\t\t\t  break;\r\n\t\t} // switch\r\n\t\t\r\n\t  } // if\r\n\t} // onmousedown\r\n\t\r\n\tobj.tabletop.onmousemove = function(e){\r\n\t  if(active){\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\t// The elements should move in hte dragged direction.\r\n\t\tobj.dx = origin.x + ( e.clientX - e0.clientX )/obj.scale;\r\n\t\tobj.dy = origin.y + ( e.clientY - e0.clientY )/obj.scale;\r\n\t\t\r\n\t\t// Move the items.\r\n\t\tobj.adjustview();\r\n\t  } // if\r\n\t} // mousemove\r\n\tobj.tabletop.onmouseup = function(){ active = false; } // onmouseup\r\n\tobj.tabletop.onmouseenter = function(){ active = false; } // onmouseenter\r\n\tobj.tabletop.onmouseleave = function(){ active = false; } // onmouseleave\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// CORRELATIONS\r\n\t// How should the metadata be passed in? Within hte items themselves?\r\n\t// Should be reworked so that the elements sit in the HUD. Then the actual interactions should be defined. Maybe the dragging of individual correlations was not bad? It should just be explicitly dragging the variable onto the axis (e.g. the point moves, if released prematurely it returns to its position, if released over axes it arranges.)\r\n\t/*\r\n\tobj.correlations = new SpatialCorrelations();\r\n\tobj.sketchpad.appendChild(obj.correlations.node);\r\n\tobj.correlations.position([5, window.innerHeight - 5]);\r\n\tobj.correlations.xoffset = window.innerWidth - 15;\r\n\tobj.correlations.yoffset = window.innerHeight - 15;\r\n\tobj.correlations.update();\r\n\t*/\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// KNOWLEDGE TREE\r\n\t// The knowledge tree is added here because it is nominally a navigation element. However the data for it comes from the KnowledgeManager, which will have to interact with the NavigationManager.\r\n\t// So now the hudsvg will just keep on passing the events to the tabletop? Can I just rename the hudsvg to sketchpad? And add other interactible elements to it, e.g. the lasso, and correlations??\r\n\tobj.tree = new TreeKnowledge();\r\n\tobj.sketchpad.querySelector(\"g.tree\").appendChild(obj.tree.node);\r\n\tobj.tree.moveto = function(connections){\r\n\t\t/* Requirements: \r\n\t\t  - temporary groups need to be made visible to be able to dissolve them - should appear whenever possible?\r\n\t\t  - the scope of the items needs to be reduced.\r\n\t\t  - moving to a node is moving to a view with the group visible. So keep the context of the parent. which one? Combined parents?\r\n\t\t  - the currently selected group should be highlighted on the navigation tree.\r\n\t\t  - prevent groups with same members from appearing simultaneously\r\n\t\t\r\n\t\t  - how to deal with the user navigating to the same group twice? Check if a similar group already exists? What to do if a superset group already exists on screen? Just highlight the superset group?\r\n\t\t*/\r\n\t\t\r\n\t\t// When a new item is added to a tree group it should be re-logged as a new temporary group? The groups will also need to keep track of the annotations to make sure only new ones are sent to the server?\r\n\t\t\r\n\t\t\r\n\t\t// The groups that can remain visible are those that are within the set of active tasks.\r\n\t\t\r\n\t\t\r\n\t\tif(connections.group.root){\r\n\t\t\t// All items should become accessible.\r\n\t\t\tobj.groups.forEach(g=>g.hide());\r\n\t\t\tobj.items.forEach(item=>item.show());\r\n\t\t\tobj.tree.currenttasks = [];\r\n\t\t\tobj.hudrefresh();\r\n\t\t} else {\r\n\t\t\t\r\n\t\t\t// Restrict the view to the members of the parent nodes. If one of the parents is the root then all the items should be active tasks.\r\n\t\t\tlet activetasks = connections.parents.reduce(function(acc,parentg){\r\n\t\t\t\treturn parentg.root ? obj.items.map(item=>item.task.taskId) : acc.concat(parentg.members);\r\n\t\t\t}, []); // reduce\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// Update the current active tasks in hte tree also. If the root is one of the parents, then don't highlight anything. Maybe don't highlight activetasks, but the selected tasks?\r\n\t\t\tobj.tree.currenttasks = connections.group.members;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tobj.items.forEach(item=>{\r\n\t\t\t\tactivetasks.includes(item.task.taskId) ? item.show() : item.hide();\r\n\t\t\t}) // forEach\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// The items corresponding to the taskIds of the clicked tree node should form a new group.\r\n\t\t\tlet clickedgroupitems = obj.items.filter(item=>{\r\n\t\t\t\treturn connections.group.members.includes(item.task.taskId);\r\n\t\t\t}) // filter\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t// Hide any groups that contain elements outside the currently active tasks. Maybe just keep all the groups in one array, but tick them to be temporary.\r\n\t\t\tlet clickedgroup\r\n\t\t\tobj.groups.forEach(g=>{\r\n\t\t\t\tif( g.members.map(item=>item.task.taskId).some(taskId=>!activetasks.includes(taskId)) ){\r\n\t\t\t\t\t// A group outside of the current active tasks scope.\r\n\t\t\t\t\tg.hide();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Potentially a group competing with the desired group.\r\n\t\t\t\t\t// A competing group is one that is not hidden, and contains some desired items. The user should not be able to have competing groups on the screen at the same time. Force the current selection, and therefore hide the other groups. They will still be accessible through the tree.\r\n\t\t\t\t\t// But if the group contains all of the clicked items, then it's not competing, then it's a superset group. Still just hide it.\r\n\t\t\t\t\t// However if a group with exactly th edesired membership exists, then just use that.\r\n\t\t\t\t\t// So what happens to tree groups that have a member added? They are turned into a temporary group, and are therefore hidden if navigated to again.\r\n\t\t\t\t\tif( clickedgroupitems.some(item=>g.members.includes(item)) ){\r\n\t\t\t\t\t\tg.hide();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tg.reinstate();\r\n\t\t\t\t\t} // if\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t// A.all is written as !A.some(v=>!B.includes(v))\r\n\t\t\t\t\tif( arrayequal(g.members, clickedgroupitems) ){\r\n\t\t\t\t\t\tclickedgroup = g;\r\n\t\t\t\t\t} // if\r\n\t\t\t\t}; // if\r\n\t\t\t}); // forEach\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tif(clickedgroup){\r\n\t\t\t\tclickedgroup.reinstate();\r\n\t\t\t\tobj.hudrefresh();\r\n\t\t\t} else {\r\n\t\t\t\tobj.makegroup(clickedgroupitems, false);\r\n\t\t\t} // if\r\n\t\t} // if\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t} // obj.tree.moveto\r\n\t\r\n\t\r\n\tobj.tree.crossreferencein = function(taskids){\r\n\t\t// Feed it to the minimap\r\n\t\tobj.minimap.highlight(taskids);\r\n\t} // obj.tree.crossreference\r\n\t\r\n\tobj.tree.crossreferenceout = function(){\r\n\t\t// Feed it to the minimap\r\n\t\tobj.minimap.unhighlight();\r\n\t} // obj.tree.crossreference\r\n\t\r\n  } // constructor\r\n  \r\n  \r\n  \r\n\r\n  \r\n  \r\n  \r\n  // Getter and setter for groups to allow inactive groups to be filtered out.\r\n  \r\n  \r\n  \r\n  track(item){\r\n\tlet obj = this;\r\n\t\r\n\tobj.container.appendChild(item.node);\r\n\t\r\n\t\r\n\t// On Drag END chck if item should be placed into group.\r\n\titem.onend = function(p){\r\n\t\t// Check if it should be added to a group.\r\n\t\t// BUT THIS SHOULD ONLY HAPPEN ON MOUSEUP!!\r\n\t\tobj.groups.forEach(g=>{\r\n\t\t\t// Check if the item midpoint is within the group, but only if it's attached. If it's not then the boundingclient rect should come back with all 0s.\r\n\t\t\tlet irect = item.node.getBoundingClientRect();\r\n\t\t\tlet grect = g.node.getBoundingClientRect();\r\n\t\t\tif( \r\n\t\t\t( ((irect.x+irect.width/2) > grect.x) && ((irect.x+irect.width/2) < grect.x+grect.width) ) && \r\n\t\t\t( ((irect.y+irect.height/2) > grect.y) && ((irect.y+irect.height/2) < grect.y + grect.height) ) ){\r\n\t\t\t\tg.addmember(item);\r\n\t\t\t\t\r\n\t\t\t\t// The item itself should be positioned back to the beginning of the drag. When the group is dissolved it allows the item to be positioned based on it's relative position ot the group.\r\n\t\t\t\t// When the group first moved, and the item is added later the results will still be inconsistent...\r\n\t\t\t\titem.position = p;\r\n\t\t\t} // if\r\n\t\t}); // forEach\r\n\t\t\r\n\t\t// Update the minimap and the tree accordingly.\r\n\t\tobj.hudrefresh();\r\n\t\t\r\n\t\t\r\n\t}; // onend\r\n\t\r\n\titem.onmove = function(){\r\n\t\tobj.minimap.update();\r\n\t}; // onmove\r\n\t\r\n\tobj.items.push(item);\r\n  } // additem\r\n  \r\n  \r\n  adjustview(){\r\n\tlet obj = this;\r\n\t// When the view is adjusted the items should also be told to check their sizes, and react is needed.\r\n\tobj.container.style.transform = obj.currenttransform();\r\n\t\r\n\t// Update the minimap\r\n\tobj.minimap.update();\r\n\t\r\n\t// Instruct all the items to check their size.\r\n\tobj.items.forEach(item=>{\r\n\t\titem.checksize();\r\n\t}) // forEach\r\n  } // adjustview\r\n  \r\n  currenttransform(){\r\n\tlet obj = this;\r\n\treturn `scale(${obj.scale}) translate(${obj.dx}px,${obj.dy}px)`;\r\n  }; // gettransform\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  /* GROUPING\r\n  How to handle the grouping?\r\n  \r\n  The server pushes an array of `knowledge'. Each row of the array will be a separate annotation? And then the different attributes it will have will make it a different type? The server could be asked to send specific types of annotations over, and the local version would just keep them.\r\n  \r\n  For comments the server sent everything originally, and then individual ones separately. The same could be applied here also. So maybe everything with a valid `tags' could be sent over first, and then the comments etc. would be sent when the corresponding commenting section is open? In any case the knowledge manager will have to keep tabs on all the individual annotations, to be able to replace them with updated versions as they arrive. How would the SQL database be updated with a newer version of the same row? With the UPDATE statement!\r\n  \r\n  \r\n  How should the annotations be stored, just in an array, or in the actual items. Maybe both?\r\n  \r\n  \r\n  Everything with `tags' can be fed to the tree. The groups should be tracked as unsubmitted annoations also. What kind of tags should they be given? Unsaved1 etc?\r\n  \r\n  \r\n  \r\n  The temporary groups can just be kept as groups, and the knowldge manager will just update when groups are expanded? Then the groups made through the tree should not be entered into the obj.groups array. No removal of annotations!!\r\n  \r\n  How should the groups be saved! Should there just be an annotation form at the bottom, that will allow the user to submit a tag? How should the groups with several tags display these? Just above the annotation form? Yes, there they also form a basis for the conversation topics! To supplement the tags they could have a draw icon next to them that allows\r\n  \r\n  \r\n  How to get rid of unnecessary groups once the user dissolves them?? Need to distinguish these groups from the ones that are just navigated away from. And when a tree node is clicked it will have to keep track of the temporary groups also! Well, dissolved groups will have no members!!\r\n  \r\n  The tree needs to correctly position the temporary group also. How should it do this?\r\n  \r\n  */\r\n  \r\n  \r\n  get groups(){\r\n\t  let obj = this;\r\n\t  \r\n\t  // Filter out any empty groups\r\n\t  obj._groups = obj._groups.filter(g=>{\r\n\t\t  return g.members.length > 0;\r\n\t  })\r\n\t  return obj._groups;\r\n  } // set\r\n  \r\n  \r\n  makegroup(items, temporary){\r\n\tlet obj = this;\r\n\t// The user wishes to create a group using lasso selection. Make this group and store it separately from groups that are a direct result of the tree navigation.\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\tlet p = [0, 0];\r\n\titems.forEach(item=>{\r\n\t\tp[0] += parseFloat(item.node.style.left) / items.length;\r\n\t\tp[1] += parseFloat(item.node.style.top) / items.length;\r\n\t}) // forEach\r\n\t\r\n\tlet g = new Group(items, temporary);\r\n\t\r\n\tg.position = p;\r\n\tg.origin = p;\r\n\tg.enter = function(){  \r\n\t\t// Hide all items that are not in the current set.\r\n\t\tobj.items.forEach(item=>{\r\n\t\t\tg.members.includes(item) ? item.show() : item.hide();\r\n\t\t}) // forEach\r\n\t\t\r\n\t\t// Just hide all groups.\r\n\t\tobj.groups.forEach(g_=>g_.hide()) // forEach;\r\n\t\t\r\n\t} // enter\r\n\r\n\t// Add the group to the session.\r\n\tobj.groups.push(g);\r\n\tobj.container.appendChild(g.node);\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t// Update the minimap and the tree data.\r\n\tobj.minimap.add(g);\r\n\t\r\n\r\n\tg.onmove = function(){ obj.minimap.update(); } // onmove\r\n\tg.ondissolve = function(){ obj.hudrefresh(); } // ondissolve\r\n\r\n\r\n\t// All temporary groups should be added as annotations to the tree.\r\n\tobj.hudrefresh();\r\n\t\r\n\t\r\n\t\r\n\t\r\n  } // makegroup\r\n  \r\n  \r\n\r\n\r\n  hudrefresh(){\r\n\tlet obj = this;\r\n\tobj.minimap.update();\r\n\tobj.tree.temporary = obj.groups.filter(g=>g.temporary);\r\n\tobj.tree.update();\r\n  } // hudrefresh\r\n\r\n  \r\n  \r\n  \r\n} // NavigationManager\r\n\r\n\r\n\r\n\r\nfunction arrayequal(A,B){\r\n\tlet AequalsB = !A.some(v=>!B.includes(v));\r\n\tlet BequalsA = !B.some(v=>!A.includes(v));\r\n\treturn AequalsB && BequalsA\r\n} // arrayequal\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/*\r\nThis class should connect with the server to get and save the knowledge captured.\r\n\r\nWhere should the tree be drawn also? Top left, as before?\r\n\r\n\r\nWhere in the code hierarchy should KnowledgeManager sit? Below or above NavigationManager. Maybe above is fine?\r\n\r\nWhat kind of knowledge is there, and what does it need to interact with, and how:\r\n\r\n- Structured tags: name/value pairs equivalent to ordinal/categorical metadata variables\r\n\tordinal name-spatial value pairs: global menu\r\n\tcategorical name-spatial value pairs: global menu\r\n- Unstructured tags: keywords saved as a list for each metadata row\r\n    name: existing chapter form\r\n- Annotations: timestamp/line/area data with a keyword attached\r\n    name-timestep: existing chapter form\r\n\tname-line: drawing interaction\r\n\tname-area: drawing interaction\r\n- Comments:\r\n\ttext: exiting comment form\r\n\r\n\r\nAll properties\t\r\nid, taskId, author, datetime, name, value, geometry, comment, upvotes, downvotes\r\n\r\n\r\nCompulsory properties:\r\nid, taskId, author, datetime, name\r\n\r\n\r\nThe id should be an annotation specific id!!! What should this be??? Just sequential numbers? Assigned at the server?\r\n\r\nThe tree should only track the knowledge, and not all the taskIds.\r\n*/\r\n\r\n\r\n// Task 11 is in two groups!!\r\nconst testannotations = [\r\n{id: \"0\", name: \"green\", taskId: \"task 2\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"1\", name: \"green\", taskId: \"task 7\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"2\", name: \"green\", taskId: \"task 11\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"3\", name: \"blue\", taskId: \"task 5\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"4\", name: \"blue\", taskId: \"task 6\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"5\", name: \"blue\", taskId: \"task 11\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"6\", name: \"brown\", taskId: \"task 1\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"7\", name: \"brown\", taskId: \"task 3\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"8\", name: \"brown\", taskId: \"task 4\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"9\", name: \"brown\", taskId: \"task 8\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"10\", name: \"brown\", taskId: \"task 13\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"11\", name: \"brown\", taskId: \"task 15\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"}\r\n]; // testannotations\r\n\r\n\r\n\r\nconst testannotations2 = [\r\n{id: \"0\", name: \"B\", taskId: \"task 1\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"1\", name: \"B\", taskId: \"task 2\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"2\", name: \"B\", taskId: \"task 3\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"3\", name: \"B\", taskId: \"task 4\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n\r\n{id: \"4\", name: \"C\", taskId: \"task 3\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"5\", name: \"C\", taskId: \"task 4\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"6\", name: \"C\", taskId: \"task 5\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"7\", name: \"C\", taskId: \"task 6\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n\r\n{id: \"8\", name: \"D\", taskId: \"task 3\", author: \"Magda\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"9\", name: \"D\", taskId: \"task 4\", author: \"Magda\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"10\", name: \"D\", taskId: \"task 5\", author: \"Magda\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"11\", name: \"D\", taskId: \"task 6\", author: \"Magda\", datetime: \"Tue Feb 08 2022\"},\r\n\r\n{id: \"12\", name: \"E\", taskId: \"task 7\", author: \"Magda\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"13\", name: \"E\", taskId: \"task 8\", author: \"Magda\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"14\", name: \"E\", taskId: \"task 9\", author: \"Magda\", datetime: \"Tue Feb 08 2022\"},\r\n\r\n{id: \"15\", name: \"F\", taskId: \"task 3\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"16\", name: \"F\", taskId: \"task 4\", author: \"Aljaz\", datetime: \"Tue Feb 08 2022\"},\r\n\r\n{id: \"17\", name: \"G\", taskId: \"task 8\", author: \"Magda\", datetime: \"Tue Feb 08 2022\"},\r\n{id: \"18\", name: \"G\", taskId: \"task 9\", author: \"Magda\", datetime: \"Tue Feb 08 2022\"},\r\n]; // atestannotation2\r\n\r\n\r\n\r\nexport default class KnowledgeManager{\r\n  constructor(nm){\r\n\tlet obj = this;\r\n\t\r\n\t// `nm' is a NavigationManager object.\r\n\t// For now just push the given annotations to the tree?? Justto see if the tree is working? Where and how are the events attached to the tree?\r\n\tnm.tree.data = testannotations2;\r\n\tnm.tree.update();\r\n\t\r\n\t\r\n  } // constructor\r\n} // KnowledgeManager","/*\r\nThis should connect to the server, receive some data, and create the spatial arrangement environment.\r\n*/\r\n\r\nimport Individual from \"./grouping/Individual.js\";\r\nimport NavigationManager from \"./navigation/NavigationManager.js\";\r\nimport KnowledgeManager from \"./knowledge/KnowledgeManager.js\";\r\n\r\n\r\n// Do we want categorical variables in here as well?? Knowledge may be injected through ML generated tags or something? But then maybe they could be injected just as tags?\r\n\r\n// author, datetime, tag, taskId, line, area, t\r\n// Maybe separate annotations for starttime and endtime? And then let the system figure out a close chapter.\r\n\r\n\r\n\r\n\r\nconst data = [\r\n{taskId: \"task 0\", sepal_length: 5.1, sepal_width: 3.5, color: \"salmon\"},\r\n{taskId: \"task 1\", sepal_length: 4.9, sepal_width: 3, color: \"sandybrown\"},\r\n{taskId: \"task 2\", sepal_length: 4.7, sepal_width: 3.2, color: \"seagreen\"},\r\n{taskId: \"task 3\", sepal_length: 4.6, sepal_width: 3.1, color: \"seashell\"},\r\n{taskId: \"task 4\", sepal_length: 5, sepal_width: 3.6, color: \"sienna\"},\r\n{taskId: \"task 5\", sepal_length: 5.4, sepal_width: 3.9, color: \"skyblue\"},\r\n{taskId: \"task 6\", sepal_length: 4.6, sepal_width: 3.4, color: \"slateblue\"},\r\n{taskId: \"task 7\", sepal_length: 5, sepal_width: 3.4, color: \"springgreen\"},\r\n{taskId: \"task 8\", sepal_length: 4.4, sepal_width: 2.9, color: \"tan\"},\r\n{taskId: \"task 9\", sepal_length: 4.9, sepal_width: 3.1, color: \"thistle\"},\r\n{taskId: \"task 10\", sepal_length: 5.4, sepal_width: 3.7, color: \"tomato\"},\r\n{taskId: \"task 11\", sepal_length: 4.8, sepal_width: 3.4, color: \"turquoise\"},\r\n{taskId: \"task 12\", sepal_length: 4.8, sepal_width: 3, color: \"violet\"},\r\n{taskId: \"task 13\", sepal_length: 4.3, sepal_width: 3, color: \"wheat\"},\r\n{taskId: \"task 14\", sepal_length: 5.8, sepal_width: 4, color: \"lightpink\"},\r\n{taskId: \"task 15\", sepal_length: 5.7, sepal_width: 4.4, color: \"antiquewhite\"}\r\n]; // data\r\n\r\n// Items\r\nvar workspace = new NavigationManager();\r\n\r\nvar items = [] \r\n\r\nfor(let i=0; i<data.length; i++){\r\n\tlet item = new Individual(data[i])\r\n\titems.push(item);\r\n\t\r\n\t// Temporarilyturn the position: absolute off so we get an initial arrangement.\r\n\titem.node.style.position = \"\";\r\n\t\r\n\t// Make navigation manager keep track of the item.\r\n\tworkspace.track(item);\r\n} // for\r\n\r\n\r\n// Update the minimap with all the items. This could be implemented in a nicer way it feels.\r\nworkspace.minimap.update(items);\r\n\r\n// The initial positioning is done based on \"position: relative;\"\r\nlet headeroffset = 80;\r\nlet positions = items.reduce((acc,item)=>{\r\n\tacc.push([item.node.offsetLeft, item.node.offsetTop + headeroffset])\r\n\treturn acc\r\n},[])\r\n\r\n// Now positionthem absolutely, and add the dragging.\r\nitems.forEach((item,i)=>{\r\n\titem.node.style.position = \"absolute\";\r\n\titem.position = positions[i];\r\n}) // forEach\r\n\r\n\r\n\r\n// The knowledge manager object.\r\nvar knowledge = new KnowledgeManager(workspace);\r\n\r\n\r\n// Add the main rendering loop\r\nconsole.log(workspace)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["html2element","html","template","document","createElement","innerHTML","trim","content","firstChild","svg2element","svg","g","createElementNS","isWithinBoundingClientRect","A","B","x","width","y","height","scaleCategorical","domain","range","v","obj","i","indexOf","length","push","scaleLinear","_domain","_range","d","r","mapSpaceAValueToSpaceB","arrayEqual","arrayIncludesAll","f","filter","b","includes","Item","node","style","position","viewnode","querySelector","previewnode","maxWidth","active","itemStartPosition","itemRelativePosition","onmousedown","e","contains","target","isConnected","preventDefault","rect","getBoundingClientRect","clientX","clientY","parentNode","insertBefore","onmousemove","p","parentElement","k","Number","transform","split","replace","parentRect","pageX","pageY","onmove","onmouseup","onend","onmouseenter","onmouseleave","display","parseFloat","left","top","point","Individual","task","taskId","background","color","opacity","DrawLink","parentnode","childnode","author","pi","ci","bendi","node_label_width","bundle_width","line_width","r1","level","r2","dyc","markerEmptyIn","dyp","markerEmptyOut","xHorizontal","origin","yMarkerStart","arc1start","arc1end","arc2start","arc2end","treebundle","seednode","links","_bendi","parents","connections","children","group","nodeChildren","nodeParents","forEach","link","paths","querySelectorAll","setAttribute","path","isNodeAllowed","isNodeUnknown","updateNodeMinPositions","c","map","join","bundles","y_lowest_parent","reduce","acc","child","miny","TreeLevel","nodes","nlevel","n","getBundleLinesGoingThroughNode","bundle","arrangeIncomingOutgoingTracks","outgoingbundles","incomingbundles","sort","a","lines","line","nbundlesin","nbundlesout","arrangeBundlesOfLevel","maxBundleInd","getbundles","bundleseeds","tags","tag","existing","addchild","TreeBundle","addparent","makelinks","getlevels","levels","maxlevel","Math","max","dimensioning","clear","x_offset","y_offset","markersize","pitch","TreeNode","treegroup","undefined","_y","hidden","label","addEventListener","highlighttext","marker","highlightmarker","texts","labelx","labely","updateBackgroundRectSize","t","textbox","getBBox","size","outline","val","yoffset","name","members","array2tree","array","groups","findAllTagBasedGroups","mergedgroups","mergeIdenticalGroups","hierarchicalnodes","findParentalRelationships","taskgroup","ancestors","descendants","some","id","dict","groupid","temporary","addtask","addtag","root","makeRootGroup","concat","identicalg","g_","isSubset","candidate","parent","calculateLevelNumbers","unassignednodes","TreeHierarchy","annotations","collapsednodes","update","temporaryAnnotations","item","hiddennodes","collapsed","TreeKnowledge","hierarchy","gnodes","gbundles","currenttasks","visiblenodes","updatenodes","updatelines","interact","nodeobj","iscurrent","appendChild","highlightselect","onclick","moveto","crossreferencein","crossreferenceout","bundleobj","dom2range","console","log","taskids","MiniMapIcon","xscale","yscale","highlight","itemClientRect","sqrt","MiniMapViewRect","clickedItemOffset","svgClientRect","reposition","window","innerWidth","innerHeight","MiniMap","_icons","viewrect","icons","icon","memberids","memberitem","unhighlight","remove","ic","range2dom","getAttribute","splice","items","add","centerdata","init","render","domains","calculateInitialMinimapDomain","xdiff","ydiff","u","bodyClientRect","body","minx","maxx","maxy","POSITIVE_INFINITY","NEGATIVE_INFINITY","Lasso","polygon","_boundary","boundary","event","clearBoundary","addBoundaryPoint","draw","hide","zIndex","svgbox","isInside","passesEdge","p0","p1","icontemplate","Group","head","dissolvebutton","dissolve","enterbutton","enter","current","addmember","uncolorAllIcons","iconobj","pressTimer","releaseMember","release","clearTimeout","setTimeout","offset","ondissolve","show","NavigationManager","_groups","scale","dx","dy","tabletop","getElementById","container","sketchpad","zoom","deltaY","min","adjustview","minimap","onwheel","getoffset","currenttransform","lasso","findItemsInLasso","selected","itemrect","miditem","isPointInside","selectedIndividuals","makegroup","e0","which","tree","hudrefresh","activetasks","parentg","clickedgroupitems","clickedgroup","reinstate","arrayequal","irect","grect","checksize","AequalsB","BequalsA","testannotations2","datetime","KnowledgeManager","nm","data","sepal_length","sepal_width","workspace","track","headeroffset","positions","offsetLeft","offsetTop"],"mappings":"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"}